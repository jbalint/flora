/* File:      include/flrbasetype_signatures.flh
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2013.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/


// IRI class methods
_iri[toType(_string) =>_iri].
_iri[=>_isTypeOf(_object)].

// IRI instance methods
_iri[scheme *=> _string].
_iri[user *=> _string].
_iri[host *=> _string].
_iri[port *=> _string].
_iri[path *=> _string].
_iri[query *=> _string].
_iri[fragment *=> _string].

// IRI standard methods
_iri[toSymbol *=> _symbol].
_iri[*=> equals(_object)].
_iri[typeName *=> _string].


// _dateTime class methods
_dateTime[toType(_integer,_integer,_integer,_integer,
                  _integer,_integer,_decimal,
		  _integer,_integer,_integer) => _dateTime].
_dateTime[toType(_string) => _dateTime].
_dateTime[=> isTypeOf(_object)].

// _dateTime instance methods
_dateTime[dateSign *=> _integer].
_dateTime[year *=> _integer].
_dateTime[month *=> _integer].
_dateTime[day *=> _integer].
_dateTime[hour *=> _integer].
_dateTime[minute *=> _integer].
_dateTime[second *=> _integer].
_dateTime[zoneSign *=> _integer].
_dateTime[zoneHour *=> _integer].
_dateTime[zoneMinute *=> _integer].

// _dateTime standard methods
_dateTime[toSymbol *=> _symbol].
_dateTime[*=> equals(_object)].
_dateTime[*=> lessThan(_object)].
_dateTime[typeName *=> _string].
_dateTime[add(_duration) *=> _dateTime].



// _date class methods
_date[toType(_integer,_integer,_integer,_integer,
              _integer,_integer,_integer) => _date].
_date[toType(_string) => _date].
_date[=> isTypeOf(_object)].

// _date instance methods
_date[dateSign *=> _integer].
_date[year *=> _integer].
_date[month *=> _integer].
_date[day *=> _integer].
_date[zoneSign *=> _integer].
_date[zoneHour *=> _integer].
_date[zoneMinute *=> _integer].

// _date standard methods
_date[toSymbol *=> _symbol].
_date[*=> equals(_object)].
_date[*=> lessThan(_object)].
_date[typeName *=> _string].
_date[add(_duration) *=> _date].


// _time class methods
_time[toType(_integer,_integer,_decimal,_integer,_integer,_integer) => _time].
_time[toType(_string) => _time].
_time[=> isTypeOf(_object)].

// _time instance methods
_time[hour *=> _integer].
_time[minute *=> _integer].
_time[second *=> _integer].
_time[zoneSign *=> _integer].
_time[zoneHour *=> _integer].
_time[zoneMinute *=> _integer].

// _time standard methods
_time[toSymbol *=> _symbol].
_time[*=> equals(_object)].
_time[*=> lessThan(_object)].
_time[typeName *=> _string].
_time[add(_duration) *=> _time].



// _duration class methods
_duration[toType(_integer,_integer,_integer,
                  _integer,_integer,_integer) => _duration].
_duration[toType(_string) => _duration].
_duration[=> isTypeOf(_object)].

// _duration instance methods
_duration[year *=> _integer].
_duration[month *=> _integer].
_duration[day *=> _integer].
_duration[hour *=> _integer].
_duration[minute *=> _integer].
_duration[second *=> _integer].

// _duration standard methods
_duration[toSymbol *=> _symbol].
_duration[*=> equals(_object)].
_duration[*=> lessThan(_object)].
_duration[typeName *=> _string].
_duration[add(_duration) *=> _duration].



// _boolean class methods
_boolean[toSymbol => _symbol].
_boolean[=> isTypeOf(_object)].

// _boolean standard methods
_boolean[toSymbol *=> _symbol].
_boolean[*=> equals(_object)].
_boolean[*=> lessThan(_object)].
_boolean[typeName *=> _string].
_boolean[rawValue *=> _string].


// _long class methods
_long[toType(_string) => _long].
_long[toType(_integer) => _long].
_integer[=> isTypeOf(_object)].

// _long standard methods
_long[toSymbol *=> _symbol].
_long[*=> equals(_object)].
_long[*=> lessThan(_object)].
_long[typeName *=> _string].
_long[rawValue *=> _string].


// _double class methods
_double[toType(_decimal) => _double].
_double[toType(_long) => _double].
_double[=> isTypeOf(_object)].

// _double instance methods
_double[floor *=> _integer].
_double[ceiling *=> _integer].
_double[round *=> _integer].

// _double standard methods
_double[toSymbol *=> _symbol].
_double[*=> equals(_object)].
_double[*=> lessThan(_object)].
_double[typeName *=> _string].
_double[rawValue *=> _string].



// _string class methods
_string[=> isTypeOf(_object)].

// _string instance methods
_string[*=> _contains(_string)].
_string[concat(_string) *=> _string].
_string[reverse *=> _string].
_string[length *=> _integer].
_string[toUpper *=> _string].
_string[toLower *=> _string].
_string[*=> startsWith(_string)].
_string[*=> endsWith(_string)].
_string[substring(_integer,_integer) *=> _string].

// _string standard methods
_string[*=> equals(_object)].
_string[*=> lessThan(_object)].
_string[typeName *=> _string].



// _list class methods
_list[=> isTypeOf(_object)].

// _list instance methods
_list[*=> contains( list)].
_list[*=> member(_object)].
_list[append(_list) *=> _list].
_list[length *=> _long].
_list[reverse *=> _list].
_list[sort *=> _list].
_list[*=> startsWith(_list)].
_list[*=> endsWith(_list)].
_list[*=> subset(_list)].

// _list standard methods
_list[toSymbol *=> _symbol].
_list[*=> equals(_object)].
_list[typeName *=> _string].

