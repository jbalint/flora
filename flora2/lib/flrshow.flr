/* File:      flrshow.flr
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@one.sourceforge.net
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 2014.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/

:- export{?[splice(?) -> ?],
	  ?[show -> ?]}.

:- nontabled_module.
:- suppress_rule_signatures.

:- verbatim{':-(import(from(/(flora_decode_oid_as_list,2),flrdecode))).'}.
:- prolog{change_module_if_needed/3}.

?List[splice(?Separator) -> ?Result] :-
	islist{?List},
	change_module_if_needed(?List,?ListM,\?C),
	decode_list_add_separator(?ListM,?SepList,
	                          flora_decode_oid_as_list(?,?)@\prolog,
				  ?Separator)@\prolog(flrdecode),
	flora_concat_items(?SepList,?Result)@\prolog(flrporting).

?Term[show -> ?Result] :-
	change_module_if_needed(?Term,?TermM,\?C),
	!,
	flora_decode_oid_as_list(?TermM,?TermOut)@\prolog(flrdecode),
	flora_concat_items(?TermOut,?Result)@\prolog(flrporting).



change_module_if_needed(?T,?T,?_NewMod) :-
	isvar{?T},
	!.
change_module_if_needed([],[],?_NewMod) :- !.
change_module_if_needed([?L|?R],[?LM|?RM],?NewMod) :-
	!,
	change_module_if_needed(?L,?LM,?NewMod),
	change_module_if_needed(?R,?RM,?NewMod).
change_module_if_needed(?T,?TM,?NewMod) :-
	is_flora_callable_literal(?T)@\prolog(flrwrapper),
	flora_change_module(?T,?TM,(\@,?NewMod),?NewMod,
	                    ['In ',FLSYSMODSHOW,'?Term[show->?Result]',
			     ': ?Term must be bound'])@\prolog(flrwrapper),
	!.
change_module_if_needed(?_T,?_T,?_NewMod) :- \true.
