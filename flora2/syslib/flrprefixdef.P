/* File:      flrprefixdef.P
**
** Author(s): Hui Wan
**
** Contact:   kifer@cs.stonybrook.edu
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2013.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/


:- compiler_options([xpp_on]).

#include "flora_terms.flh"
#include "flora_datatype_symbols.flh"
#include "flora_exceptions.flh"


:- import
	flora_shell_prefixdef/3,
	flora_coder_prefixdef/2
   from flrregistry.

:- import flora_concat_atoms/2 from flrporting.

:- export
	flora_runtime_uriprefix_expansion/3,
	flora_compiletime_uriprefix_expansion/2,
	flora_clear_compiletime_uriprefixes/0,
	flora_clear_runtime_uriprefixes/0,
	FLLIBPREFIXPRIMITIVE/3,
	FLLIBPREFIXDEF/3,
	FLLIBPREFIXDEF/2.


FLLIBPREFIXDEF(Mod,Prefix,Expansion) :-
	retractall(flora_shell_prefixdef(Mod,Prefix,_)),
	flora_concat_atoms([FL_IRI_TYPE_PREFIX,Expansion],RealExpansion),
	assert(flora_shell_prefixdef(Mod,Prefix,RealExpansion)).
FLLIBPREFIXDEF(Prefix,Expansion) :-
	retractall(flora_coder_prefixdef(Prefix,_)),
	flora_concat_atoms([FL_IRI_TYPE_PREFIX,Expansion],RealExpansion),
	assert(flora_coder_prefixdef(Prefix,RealExpansion)).

FLLIBPREFIXPRIMITIVE(Prefix,Def,Mod) :-
	(flora_shell_prefixdef(Mod,Prefix,Def)
	;
	    standard_definitions(Prefix,Def)
	).

flora_clear_compiletime_uriprefixes :- retractall(flora_coder_prefixdef(_,_)).
flora_clear_runtime_uriprefixes :- retractall(flora_shell_prefixdef(_,_,_)).



%% Note: all of these iris have the i\b prefix, as required by the iri data type
standard_definitions(xsd,'i\bhttp://www.w3.org/2001/XMLSchema#').
standard_definitions(rdf,'i\bhttp://www.w3.org/1999/02/22-rdf-syntax-ns#').
standard_definitions(rdfs,'i\bhttp://www.w3.org/2000/01/rdf-schema#').
standard_definitions(owl,'i\bhttp://www.w3.org/2002/07/owl#').
standard_definitions(rif,'i\bhttp://www.w3.org/2007/rif#').
standard_definitions(silk,'i\bhttp://vulcan.com/2008/silk#').
standard_definitions(silkb,'i\bhttp://vulcan.com/2008/silk-builtins#').
standard_definitions(silkui,'i\bhttp://silk.bbn.com/1.1#').
standard_definitions(swrlb,'i\bhttp://www.w3.org/2003/11/swrlb#').
standard_definitions(dc,'i\bhttp://purl.org/dc/elements/1.1/').


flora_runtime_uriprefix_expansion(Mod,Prefix,Def) :-
	nonvar(Mod),
	flora_shell_prefixdef(Mod,Prefix,Def),
	!.
flora_runtime_uriprefix_expansion(Mod,Prefix,Def) :-
	var(Mod),
	flora_shell_prefixdef(Mod,Prefix,Def).
flora_runtime_uriprefix_expansion(_Mod,Prefix,Def) :-
	standard_definitions(Prefix,Def).

flora_compiletime_uriprefix_expansion(Prefix,Def) :-
	flora_coder_prefixdef(Prefix,Def),
	!.
flora_compiletime_uriprefix_expansion(Prefix,Def) :-
	standard_definitions(Prefix,Def).
