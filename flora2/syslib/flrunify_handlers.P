/* File:      flrunify_handlers.P
**
** Author(s): Michael Kifer
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2013;
**      and Vulcan, Inc., 2011-2013.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**      http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
**
*/


:- compiler_options([xpp_on]).
#include "flora_terms.flh"

:- import flora_load_library/1 from flrlibman.
:- import
	%%put_attr/3,
	get_attr/3,
	install_attribute_portray_hook/3,
	install_verify_attribute_handler/5
   from machine.

:- import flora_put_attr/3 from flrwhen.

:- import
	append/3
   from basics.

:- import
	flora_write_oid/1,
	flora_write_goal/1
   from flrdecode.

:- import
	'\\isiri'/1,
	'\\isstring'/1,
	'\\issymbol'/1,
	'\\isboolean'/1
    from flrdatatype.


?- flora_load_library(FLLIBMETAOPS).

/***************** Commands to install the unify handlers ***************/

/***********************************************************************
 Set attributed variable handler for FLDYNRULEVARCHECK.
  Used in syslib/flrdynrule.P
 Here we accummulate variables in inserted rules in order to be able to
 issue warnings about unsafe and singleton variables.
 ***********************************************************************/
:- install_verify_attribute_handler(
	FLDYNRULEVARCHECK,AttrValue,VarBinding,
	flora_dynrule_check_handler(AttrValue,VarBinding),
	no_warnings
    ).

:- install_verify_attribute_handler(
	FLSEMANTICUNIFICATION,AttrValue,VarBinding,
	flora_semantic_unification_handler(AttrValue,VarBinding),
	no_warnings
    ).

%% attribute here should be a check for the datatype.
%% E.g., is_list(_), integer(_), etc.
:- install_verify_attribute_handler(
	FL_DT_VAR,AttrValue,VarBinding,
	flora_DT_variable_handler(AttrValue,VarBinding),
        no_warnings
   ).

:- install_attribute_portray_hook(FLDYNRULEVARCHECK,Attr,flora_write_oid(Attr)).

:- install_attribute_portray_hook(FLSEMANTICUNIFICATION,Attr,flora_write_goal(Attr)).

:- install_attribute_portray_hook(FL_DT_VAR,Attr,flrvar_dt_portray(Attr)).

/****************** The actual handlers **************************************/

%% attributed var handler for FLDYNRULEVARCHECK (used in syslib/flrdynrule).
flora_dynrule_check_handler(AttributeValue,VariableBinding) :-
        ( var(VariableBinding) ->
            ( get_attr(VariableBinding,FLDYNRULEVARCHECK,DynruleCheckVars) ->
                append(AttributeValue,DynruleCheckVars,NewDynruleCheckVars),
                flora_put_attr(VariableBinding,FLDYNRULEVARCHECK,NewDynruleCheckVars)
            ;
                flora_put_attr(VariableBinding,FLDYNRULEVARCHECK,AttributeValue)
            )
        ;
            true
        ).


%% attributed var handler for FLSEMANTICUNIFICATION.
%% Handles variables that have reification and other stuff attached
%% to them as attributes.
flora_semantic_unification_handler(AttributeValue,VariableBinding) :-
	FLLIBUNIVEQFORM(AttributeValue,VariableBinding).


flora_DT_variable_handler(AttrValue,VarBinding) :-
	%% AttrValue is something like is_list(_) or integer(_)
	arg(1,AttrValue,VarBinding),
	call(AttrValue).

%% Datatype var tests - assigned to type variables by the compilation
flr_dt_list_test(X) :- is_list(X), !.
flr_dt_list_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_list_test(_)).
flr_dt_integer_test(X) :- integer(X), !.
flr_dt_integer_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_integer_test(_)).
flr_dt_real_test(X) :- real(X), !.
flr_dt_real_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_real_test(_)).
flr_dt_charlist_test(X) :- is_charlist(X), !.
flr_dt_charlist_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_charlist_test(_)).
flr_dt_iri_test(X) :- '\\isiri'(X), !.
flr_dt_iri_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_iri_test(_)).
flr_dt_string_test(X) :- '\\isstring'(X), !.
flr_dt_string_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_string_test(_)).
flr_dt_symbol_test(X) :- '\\issymbol'(X), !.
flr_dt_symbol_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_symbol_test(_)).
flr_dt_boolean_test(X) :- \+(\+'\\isboolean'(X)), !.
flr_dt_boolean_test(X) :- get_attr(X,FL_DT_VAR,flr_dt_boolean_test(_)).

flrvar_dt_portray(flr_dt_list_test(_)) :- write('list').
flrvar_dt_portray(flr_dt_integer_test(_)) :- write('integer').
flrvar_dt_portray(flr_dt_real_test(_)) :- write('real').
flrvar_dt_portray(flr_dt_charlist_test(_)) :- write('charlist').
flrvar_dt_portray(flr_dt_iri_test(_)) :- write('iri').
flrvar_dt_portray(flr_dt_string_test(_)) :- write('string').
flrvar_dt_portray(flr_dt_symbol_test(_)) :- write('symbol').
flrvar_dt_portray(flr_dt_boolean_test(_)) :- write('boolean').
