/*******************************************************************************
  file: flrincludes/flrtable.fli - FLORA-2 wrappers that must be tabled.
  				   This is used by the FLORA-2 build-time
				   preprocessor, flrwraparound.P, to
				   convert .fli files into .flh files.
  Author(s): Michael Kifer

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2013.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

*******************************************************************************/



#include "flora_terms.flh"
#include "flora_wspredicates.flh"



:- WRAP_COPY_UNQUOTED 'TABLING_CONNECTIVE'.
:- WRAP_COPY_UNQUOTED 'ISA_TABLING_TYPE'.
:- WRAP_COPY_UNQUOTED 'MOLECULE_TABLING_TYPE'.
:- WRAP_COPY_UNQUOTED 'EQUALITY_TABLING_TYPE'.

/***************************************************************************
  tabling directives

  Note: Tabling inferred_* predicates appears to be not necessary
***************************************************************************/

'TABLING_CONNECTIVE'(( table
	(
	    WRAP_SUB/3,
	    WRAP_ISA/3
	)
   as 'ISA_TABLING_TYPE'
   )).

'TABLING_CONNECTIVE'(( table	
   	(
	    WRAP_MVD/4,	
	    WRAP_IMVD/4,

	    WRAP_MVDDEF/3,
	    WRAP_IMVDDEF/3,

	    WRAP_MVDSIG/4,
	    WRAP_MVDCONDEF/5,
	    WRAP_MVDSIGDEF/3,

	    WRAP_IMVDSIG/4,
	    WRAP_IMVDCONDEF/5,
	    WRAP_IMVDSIGDEF/3,

	    WRAP_METH/3,	
	    WRAP_IMETH/3,

	    WRAP_BOOLSIG/3,	
	    WRAP_IBOOLSIG/3,

	    WRAP_TRANSIG/3,	
	    WRAP_ITRANSIG/3,

	    WRAP_EXISTS/2
	)
   as 'MOLECULE_TABLING_TYPE'
   )).

'TABLING_CONNECTIVE'(( table
	WRAP_DIFFOBJEQL/3
   as 'EQUALITY_TABLING_TYPE'
   )).


%%%%%%%%%%%%%%%% Negation %%%%%%%%%%%%%%%%%%%%%%%

'TABLING_CONNECTIVE'(( table
	(
	    FLNEGPREFIX(WRAP_SUB)/3,
	    FLNEGPREFIX(WRAP_ISA)/3
	)
   as 'ISA_TABLING_TYPE'
   )).

'TABLING_CONNECTIVE'(( table	
   	(
	    FLNEGPREFIX(WRAP_MVD)/4,	
	    FLNEGPREFIX(WRAP_IMVD)/4,

	    FLNEGPREFIX(WRAP_MVDDEF)/3,
	    FLNEGPREFIX(WRAP_IMVDDEF)/3,

	    FLNEGPREFIX(WRAP_MVDSIG)/4,
	    FLNEGPREFIX(WRAP_MVDSIGDEF)/3,

	    FLNEGPREFIX(WRAP_IMVDSIG)/4,
	    FLNEGPREFIX(WRAP_IMVDSIGDEF)/3,

	    FLNEGPREFIX(WRAP_METH)/3,	
	    FLNEGPREFIX(WRAP_IMETH)/3,

	    FLNEGPREFIX(WRAP_BOOLSIG)/3,	
	    FLNEGPREFIX(WRAP_IBOOLSIG)/3,

	    FLNEGPREFIX(WRAP_EXISTS)/2
   	)
   as 'MOLECULE_TABLING_TYPE'
   )).

'TABLING_CONNECTIVE'(( table
	FLNEGPREFIX(WRAP_DIFFOBJEQL)/3
   as 'EQUALITY_TABLING_TYPE'
   )).


/* Odd-lot predicates that need to be tabled */
'TABLING_CONNECTIVE'(( table
      (
    	FL_TRUTHVALUE_TABLED_CALL/1,
	FL_TABLED_UNNUMBER_CALL/1
      )
   as 'MOLECULE_TABLING_TYPE'
   )).
