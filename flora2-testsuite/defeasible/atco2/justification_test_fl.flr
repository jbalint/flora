:- use_argumentation_theory{SILK_AT} .
:- symbol_context silk#instRule(?,?,?)@? .
:- iriprefix swrlb = "http://www.w3.org/2003/11/swrlb#" .
:- iriprefix silkb = "http://vulcan.com/2008/silk-builtins#" .
:- iriprefix dc = "http://purl.org/dc/elements/1.1/" .
?- [atco2>>SILK_AT] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
swrlb#add[silk#arg->input1] .
swrlb#add[silk#arg->input2] .
swrlb#add[silk#binding->addbp] .
swrlb#add[silk#arg->output] .
addbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Add"^^_string)] .
input2[silk#type->xsd#decimal] .
swrlb#add : silk#ExternalPredicate .
addbp[silk#in->input1] .
addbp[silk#in->input2] .
addbp[silk#out->output] .
swrlb#abs[silk#arg->input1] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
swrlb#abs[silk#arg->output] .
absbp[silk#out->output] .
swrlb#abs[silk#binding->absbp] .
swrlb#abs : silk#ExternalPredicate .
absbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Abs"^^_string)] .
absbp[silk#in->input1] .
output[silk#type->xsd#decimal] .
ceilingbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Ceiling"^^_string)] .
input1[silk#type->xsd#decimal] .
ceilingbp[silk#in->input1] .
swrlb#ceiling[silk#arg->output] .
ceilingbp[silk#out->output] .
swrlb#ceiling : silk#ExternalPredicate .
swrlb#ceiling[silk#binding->ceilingbp] .
swrlb#ceiling[silk#arg->input1] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
cosbp[silk#out->output] .
swrlb#cos[silk#binding->cosbp] .
cosbp[silk#in->input1] .
swrlb#cos[silk#arg->input1] .
cosbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Cos"^^_string)] .
swrlb#cos[silk#arg->output] .
swrlb#cos : silk#ExternalPredicate .
dividebp[silk#in->input2] .
dividebp[silk#in->input1] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
swrlb#divide[silk#arg->input2] .
input2[silk#type->xsd#decimal] .
swrlb#divide[silk#arg->input1] .
swrlb#divide[silk#binding->dividebp] .
dividebp[silk#out->output] .
dividebp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Divide"^^_string)] .
swrlb#divide : silk#ExternalPredicate .
swrlb#divide[silk#arg->output] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
floorbp[silk#out->output] .
swrlb#floor[silk#binding->floorbp] .
swrlb#floor[silk#arg->output] .
swrlb#floor[silk#arg->input1] .
floorbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Floor"^^_string)] .
floorbp[silk#in->input1] .
swrlb#floor : silk#ExternalPredicate .
intDivbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.IntegerDivide"^^_string)] .
swrlb#integerDivide[silk#binding->intDivbp] .
input2[silk#type->xsd#integer] .
swrlb#integerDivide : silk#ExternalPredicate .
intDivbp[silk#out->output] .
intDivbp[silk#in->input2] .
swrlb#integerDivide[silk#arg->output] .
swrlb#integerDivide[silk#arg->input2] .
swrlb#integerDivide[silk#arg->input1] .
output[silk#type->xsd#integer] .
intDivbp[silk#in->input1] .
input1[silk#type->xsd#integer] .
input2[silk#type->xsd#integer] .
modbp[silk#in->input1] .
modbp[silk#in->input2] .
output[silk#type->xsd#integer] .
swrlb#mod[silk#arg->output] .
modbp[silk#out->output] .
swrlb#mod[silk#arg->input2] .
modbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Mod"^^_string)] .
swrlb#mod : silk#ExternalPredicate .
swrlb#mod[silk#binding->modbp] .
input1[silk#type->xsd#integer] .
swrlb#mod[silk#arg->input1] .
output[silk#type->xsd#decimal] .
multiplybp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Multiply"^^_string)] .
multiplybp[silk#in->input1] .
input1[silk#type->xsd#decimal] .
swrlb#multiply[silk#arg->input2] .
swrlb#multiply[silk#arg->input1] .
input2[silk#type->xsd#decimal] .
multiplybp[silk#in->input2] .
swrlb#multiply[silk#binding->multiplybp] .
swrlb#multiply[silk#arg->output] .
swrlb#multiply : silk#ExternalPredicate .
multiplybp[silk#out->output] .
output[silk#type->xsd#decimal] .
swrlb#pow[silk#arg->output] .
input1[silk#type->xsd#decimal] .
powbp[silk#in->input2] .
swrlb#pow : silk#ExternalPredicate .
input2[silk#type->xsd#decimal] .
powbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Pow"^^_string)] .
powbp[silk#out->output] .
powbp[silk#in->input1] .
swrlb#pow[silk#binding->powbp] .
swrlb#pow[silk#arg->input2] .
swrlb#pow[silk#arg->input1] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
roundbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Round"^^_string)] .
swrlb#round : silk#ExternalPredicate .
swrlb#round[silk#binding->roundbp] .
swrlb#round[silk#arg->output] .
roundbp[silk#out->output] .
roundbp[silk#in->input1] .
swrlb#round[silk#arg->input1] .
roundhalftoevenbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.RoundHalfToEven"^^_string)] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
roundhalftoevenbp[silk#in->input1] .
swrlb#roundHalfToEven : silk#ExternalPredicate .
roundhalftoevenbp[silk#out->output] .
swrlb#roundHalfToEven[silk#binding->roundhalftoevenbp] .
swrlb#roundHalfToEven[silk#arg->input1] .
swrlb#roundHalfToEven[silk#arg->output] .
output[silk#type->xsd#decimal] .
swrlb#sin[silk#binding->sinbp] .
input1[silk#type->xsd#decimal] .
swrlb#sin : silk#ExternalPredicate .
sinbp[silk#out->output] .
swrlb#sin[silk#arg->input1] .
swrlb#sin[silk#arg->output] .
sinbp[silk#in->input1] .
sinbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Sin"^^_string)] .
swrlb#subtract[silk#binding->subtractbp] .
output[silk#type->xsd#decimal] .
swrlb#subtract[silk#arg->input1] .
swrlb#subtract[silk#arg->input2] .
input1[silk#type->xsd#decimal] .
subtractbp[silk#out->output] .
swrlb#subtract[silk#arg->output] .
subtractbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Subtract"^^_string)] .
input2[silk#type->xsd#decimal] .
subtractbp[silk#in->input2] .
subtractbp[silk#in->input1] .
swrlb#subtract : silk#ExternalPredicate .
tanbp[silk#out->output] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
swrlb#tan : silk#ExternalPredicate .
tanbp[silk#in->input1] .
tanbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.Tan"^^_string)] .
swrlb#tan[silk#binding->tanbp] .
swrlb#tan[silk#arg->input1] .
swrlb#tan[silk#arg->output] .
unaryMinusbp[silk#out->output] .
output[silk#type->xsd#decimal] .
input1[silk#type->xsd#decimal] .
unaryMinusbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.UnaryMinus"^^_string)] .
unaryMinusbp[silk#in->input1] .
swrlb#unaryMinus[silk#binding->unaryMinusbp] .
swrlb#unaryMinus[silk#arg->output] .
swrlb#unaryMinus[silk#arg->input1] .
swrlb#unaryMinus : silk#ExternalPredicate .
output[silk#type->xsd#decimal] .
unaryPlusbp[silk#in->input1] .
input1[silk#type->xsd#decimal] .
unaryPlusbp[silk#javaClass->("org.daml.swrl.jena.builtins.numerical.UnaryPlus"^^_string)] .
unaryPlusbp[silk#out->output] .
swrlb#unaryPlus : silk#ExternalPredicate .
swrlb#unaryPlus[silk#binding->unaryPlusbp] .
swrlb#unaryPlus[silk#arg->output] .
swrlb#unaryPlus[silk#arg->input1] .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
output[silk#type->xsd#duration] .
swrlb#addDayTimeDurations[silk#arg->input1] .
addDayTimeDurationsbp[silk#out->output] .
swrlb#addDayTimeDurations[silk#arg->output] .
swrlb#addDayTimeDurations : silk#ExternalPredicate .
addDayTimeDurationsbp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurations"^^_string)] .
swrlb#addDayTimeDurations[silk#binding->addDayTimeDurationsbp] .
swrlb#addDayTimeDurations[silk#arg->input2] .
addDayTimeDurationsbp[silk#in->input1] .
addDayTimeDurationsbp[silk#in->input2] .
input2[silk#type->xsd#duration] .
swrlb#addDayTimeDurationToDate[silk#arg->output] .
addDayTimeDurationToDateBp[silk#out->output] .
addDayTimeDurationToDateBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurationToDate"^^_string)] .
addDayTimeDurationToDateBp[silk#in->input1] .
input1[silk#type->xsd#date] .
swrlb#addDayTimeDurationToDate[silk#arg->input1] .
swrlb#addDayTimeDurationToDate : silk#ExternalPredicate .
swrlb#addDayTimeDurationToDate[silk#binding->addDayTimeDurationToDateBp] .
addDayTimeDurationToDateBp[silk#in->input2] .
swrlb#addDayTimeDurationToDate[silk#arg->input2] .
output[silk#type->xsd#dateTime] .
swrlb#addDayTimeDurationToDateTime : silk#ExternalPredicate .
input2[silk#type->xsd#duration] .
addDayTimeDurationToDateTimeBp[silk#in->input2] .
addDayTimeDurationToDateTimeBp[silk#in->input1] .
swrlb#addDayTimeDurationToDateTime[silk#arg->output] .
addDayTimeDurationToDateTimeBp[silk#out->output] .
addDayTimeDurationToDateTimeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurationToDateTime"^^_string)] .
swrlb#addDayTimeDurationToDateTime[silk#binding->addDayTimeDurationToDateTimeBp] .
swrlb#addDayTimeDurationToDateTime[silk#arg->input2] .
swrlb#addDayTimeDurationToDateTime[silk#arg->input1] .
output[silk#type->xsd#dateTime] .
input1[silk#type->xsd#dateTime] .
addDayTimeDurationToTimeBp[silk#in->input2] .
swrlb#addDayTimeDurationToTime[silk#arg->output] .
input2[silk#type->xsd#duration] .
swrlb#addDayTimeDurationToTime : silk#ExternalPredicate .
addDayTimeDurationToTimeBp[silk#out->output] .
addDayTimeDurationToTimeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddDayTimeDurationToTime"^^_string)] .
addDayTimeDurationToTimeBp[silk#in->input1] .
input1[silk#type->xsd#time] .
swrlb#addDayTimeDurationToTime[silk#arg->input1] .
swrlb#addDayTimeDurationToTime[silk#arg->input2] .
swrlb#addDayTimeDurationToTime[silk#binding->addDayTimeDurationToTimeBp] .
output[silk#type->xsd#dateTime] .
addYearMonthDurationsBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddYearMonthDurations"^^_string)] .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
addYearMonthDurationsBp[silk#in->input1] .
swrlb#addYearMonthDurations[silk#binding->addYearMonthDurationsBp] .
output[silk#type->xsd#duration] .
swrlb#addYearMonthDurations[silk#arg->input2] .
swrlb#addYearMonthDurations[silk#arg->input1] .
addYearMonthDurationsBp[silk#out->output] .
addYearMonthDurationsBp[silk#in->input2] .
swrlb#addYearMonthDurations[silk#arg->output] .
swrlb#addYearMonthDurations : silk#ExternalPredicate .
swrlb#addYearMonthDurationToDate[silk#binding->addYearMonthDurationToDateBp] .
input2[silk#type->xsd#duration] .
addYearMonthDurationToDateBp[silk#in->input1] .
input1[silk#type->xsd#date] .
addYearMonthDurationToDateBp[silk#in->input2] .
swrlb#addYearMonthDurationToDate[silk#arg->input2] .
addYearMonthDurationToDateBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddYearMonthDurationToDate"^^_string)] .
swrlb#addYearMonthDurationToDate[silk#arg->output] .
output[silk#type->xsd#dateTime] .
addYearMonthDurationToDateBp[silk#out->output] .
swrlb#addYearMonthDurationToDate[silk#arg->input1] .
swrlb#addYearMonthDurationToDate : silk#ExternalPredicate .
swrlb#addYearMonthDurationToDateTime[silk#arg->input2] .
input2[silk#type->xsd#duration] .
swrlb#addYearMonthDurationToDateTime[silk#arg->input1] .
addYearMonthDurationToDateTimeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.AddYearMonthDurationToDateTime"^^_string)] .
addYearMonthDurationToDateTimeBp[silk#in->input1] .
swrlb#addYearMonthDurationToDateTime : silk#ExternalPredicate .
swrlb#addYearMonthDurationToDateTime[silk#arg->output] .
addYearMonthDurationToDateTimeBp[silk#out->output] .
addYearMonthDurationToDateTimeBp[silk#in->input2] .
output[silk#type->xsd#dateTime] .
swrlb#addYearMonthDurationToDateTime[silk#binding->addYearMonthDurationToDateTimeBp] .
input1[silk#type->xsd#dateTime] .
month[silk#type->xsd#integer] .
swrlb#date : silk#ExternalPredicate .
year[silk#type->xsd#integer] .
day[silk#type->xsd#integer] .
output[silk#type->xsd#date] .
swrlb#date[silk#arg->month] .
dateBp[silk#in->month] .
dateBp[silk#in->timeZone] .
swrlb#date[silk#arg->year] .
dateBp[silk#in->year] .
timeZone[silk#type->xsd#string] .
dateBp[silk#in->day] .
dateBp[silk#out->output] .
swrlb#date[silk#arg->day] .
swrlb#date[silk#arg->timeZone] .
swrlb#date[silk#binding->dateBp] .
swrlb#date[silk#arg->output] .
dateBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.Date"^^_string)] .
swrlb#dateTime[silk#arg->timeZone] .
dateTimebp[silk#in->seconds] .
dateTimebp[silk#in->hours] .
year[silk#type->xsd#integer] .
dateTimebp[silk#in->minutes] .
swrlb#dateTime[silk#arg->minutes] .
swrlb#dateTime[silk#arg->output] .
swrlb#dateTime[silk#arg->hours] .
hours[silk#type->xsd#integer] .
dateTimebp[silk#javaClass->("org.daml.swrl.jena.builtins.date.DateTime"^^_string)] .
seconds[silk#type->xsd#integer] .
output[silk#type->xsd#dateTime] .
swrlb#dateTime : silk#ExternalPredicate .
month[silk#type->xsd#integer] .
swrlb#dateTime[silk#arg->year] .
swrlb#dateTime[silk#arg->seconds] .
day[silk#type->xsd#integer] .
dateTimebp[silk#in->year] .
timeZone[silk#type->xsd#string] .
dateTimebp[silk#in->month] .
dateTimebp[silk#in->timeZone] .
dateTimebp[silk#in->day] .
swrlb#dateTime[silk#arg->month] .
swrlb#dateTime[silk#arg->day] .
dateTimebp[silk#out->output] .
minutes[silk#type->xsd#integer] .
swrlb#dateTime[silk#binding->dateTimebp] .
dayTimeDurationBp[silk#in->minutes] .
swrlb#dayTimeDuration[silk#arg->days] .
swrlb#dayTimeDuration[silk#arg->seconds] .
swrlb#dayTimeDuration[silk#arg->minutes] .
dayTimeDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.DayTimeDuration"^^_string)] .
swrlb#dayTimeDuration[silk#binding->dayTimeDurationBp] .
dayTimeDurationBp[silk#in->hours] .
dayTimeDurationBp[silk#out->output] .
swrlb#dayTimeDuration[silk#arg->output] .
output[silk#type->xsd#duration] .
dayTimeDurationBp[silk#in->days] .
swrlb#dayTimeDuration : silk#ExternalPredicate .
days[silk#type->xsd#integer] .
swrlb#dayTimeDuration[silk#arg->hours] .
dayTimeDurationBp[silk#in->seconds] .
hours[silk#type->xsd#integer] .
minutes[silk#type->xsd#integer] .
seconds[silk#type->xsd#integer] .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
swrlb#divideDayTimeDuration[silk#arg->output] .
divideDayTimeDurationBp[silk#in->input2] .
output[silk#type->xsd#duration] .
swrlb#divideDayTimeDuration : silk#ExternalPredicate .
divideDayTimeDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.DivideDayTimeDuration"^^_string)] .
divideDayTimeDurationBp[silk#in->input1] .
swrlb#divideDayTimeDuration[silk#arg->input2] .
swrlb#divideDayTimeDuration[silk#binding->divideDayTimeDurationBp] .
swrlb#divideDayTimeDuration[silk#arg->input1] .
divideDayTimeDurationBp[silk#out->output] .
swrlb#divideYearMonthDuration[silk#arg->input1] .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
output[silk#type->xsd#duration] .
swrlb#divideYearMonthDuration[silk#arg->input2] .
divideyearMonthDurationbp[silk#in->input1] .
swrlb#divideYearMonthDuration : silk#ExternalPredicate .
divideyearMonthDurationbp[silk#in->input2] .
divideyearMonthDurationbp[silk#out->output] .
swrlb#divideYearMonthDuration[silk#binding->divideyearMonthDurationbp] .
divideyearMonthDurationbp[silk#javaClass->("org.daml.swrl.jena.builtins.date.DivideYearMonthDuration"^^_string)] .
swrlb#divideYearMonthDuration[silk#arg->output] .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
swrlb#multiplyDayTimeDuration : silk#ExternalPredicate .
output[silk#type->xsd#duration] .
swrlb#multiplyDayTimeDuration[silk#arg->output] .
swrlb#multiplyDayTimeDuration[silk#binding->multiplyDayTimeDurationBp] .
multiplyDayTimeDurationBp[silk#out->output] .
swrlb#multiplyDayTimeDuration[silk#arg->input1] .
multiplyDayTimeDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.MultiplyDayTimeDuration"^^_string)] .
multiplyDayTimeDurationBp[silk#in->input1] .
multiplyDayTimeDurationBp[silk#in->input2] .
swrlb#multiplyDayTimeDuration[silk#arg->input2] .
multiplyYearMonthDurationBp[silk#in->input2] .
swrlb#multiplyYearMonthDuration : silk#ExternalPredicate .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
output[silk#type->xsd#duration] .
swrlb#multiplyYearMonthDuration[silk#arg->output] .
multiplyYearMonthDurationBp[silk#in->input1] .
swrlb#multiplyYearMonthDuration[silk#arg->input2] .
multiplyYearMonthDurationBp[silk#out->output] .
swrlb#multiplyYearMonthDuration[silk#binding->multiplyYearMonthDurationBp] .
swrlb#multiplyYearMonthDuration[silk#arg->input1] .
multiplyYearMonthDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.MultiplyYearMonthDuration"^^_string)] .
swrlb#subtractDates[silk#binding->subtractDatesbp] .
swrlb#subtractDates[silk#arg->input2] .
swrlb#subtractDates : silk#ExternalPredicate .
output[silk#type->xsd#duration] .
subtractDatesbp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDates"^^_string)] .
input1[silk#type->xsd#date] .
subtractDatesbp[silk#out->output] .
swrlb#subtractDates[silk#arg->input1] .
input2[silk#type->xsd#date] .
swrlb#subtractDates[silk#arg->output] .
subtractDatesbp[silk#in->input2] .
subtractDatesbp[silk#in->input1] .
output[silk#type->xsd#duration] .
swrlb#subtractDateTimesYieldingDayTimeDuration[silk#arg->output] .
swrlb#subtractDateTimesYieldingDayTimeDuration[silk#binding->subtractDateTimesYeildingDayTimeDurationBp] .
swrlb#subtractDateTimesYieldingDayTimeDuration[silk#arg->input1] .
swrlb#subtractDateTimesYieldingDayTimeDuration[silk#arg->input2] .
subtractDateTimesYeildingDayTimeDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDateTimesYieldingDayTimeDuration"^^_string)] .
input2[silk#type->xsd#dateTime] .
subtractDateTimesYeildingDayTimeDurationBp[silk#in->input1] .
subtractDateTimesYeildingDayTimeDurationBp[silk#out->output] .
swrlb#subtractDateTimesYieldingDayTimeDuration : silk#ExternalPredicate .
subtractDateTimesYeildingDayTimeDurationBp[silk#in->input2] .
input1[silk#type->xsd#dateTime] .
swrlb#subtractDateTimesYieldingYearMonthDuration : silk#ExternalPredicate .
output[silk#type->xsd#duration] .
subtractDateTimesYieldingYearMonthDurationBp[silk#out->output] .
subtractDateTimesYieldingYearMonthDurationBp[silk#in->input1] .
input2[silk#type->xsd#dateTime] .
subtractDateTimesYieldingYearMonthDurationBp[silk#in->input2] .
subtractDateTimesYieldingYearMonthDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDateTimesYieldingYearMonthDuration"^^_string)] .
swrlb#subtractDateTimesYieldingYearMonthDuration[silk#binding->subtractDateTimesYieldingYearMonthDurationBp] .
swrlb#subtractDateTimesYieldingYearMonthDuration[silk#arg->input2] .
input1[silk#type->xsd#dateTime] .
swrlb#subtractDateTimesYieldingYearMonthDuration[silk#arg->input1] .
swrlb#subtractDateTimesYieldingYearMonthDuration[silk#arg->output] .
subtractDayTimeDurationFromDateBp[silk#in->input2] .
input2[silk#type->xsd#duration] .
subtractDayTimeDurationFromDateBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurationFromDate"^^_string)] .
subtractDayTimeDurationFromDateBp[silk#in->input1] .
swrlb#subtractDayTimeDurationFromDate[silk#arg->input1] .
swrlb#subtractDayTimeDurationFromDate[silk#arg->input2] .
input1[silk#type->xsd#date] .
output[silk#type->xsd#date] .
swrlb#subtractDayTimeDurationFromDate[silk#binding->subtractDayTimeDurationFromDateBp] .
subtractDayTimeDurationFromDateBp[silk#out->output] .
swrlb#subtractDayTimeDurationFromDate : silk#ExternalPredicate .
swrlb#subtractDayTimeDurationFromDate[silk#arg->output] .
swrlb#subtractDayTimeDurationFromDateTime[silk#binding->subtractDayTimeDurationFromDateTimeBp] .
input2[silk#type->xsd#duration] .
swrlb#subtractDayTimeDurationFromDateTime[silk#arg->input1] .
swrlb#subtractDayTimeDurationFromDateTime[silk#arg->input2] .
subtractDayTimeDurationFromDateTimeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurationFromDateTime"^^_string)] .
subtractDayTimeDurationFromDateTimeBp[silk#in->input2] .
swrlb#subtractDayTimeDurationFromDateTime[silk#arg->output] .
swrlb#subtractDayTimeDurationFromDateTime : silk#ExternalPredicate .
subtractDayTimeDurationFromDateTimeBp[silk#out->output] .
output[silk#type->xsd#dateTime] .
input1[silk#type->xsd#dateTime] .
subtractDayTimeDurationFromDateTimeBp[silk#in->input1] .
input2[silk#type->xsd#duration] .
subtractDayTimeDurationFromDTimeBp[silk#in->input2] .
subtractDayTimeDurationFromDTimeBp[silk#in->input1] .
input1[silk#type->xsd#time] .
swrlb#subtractDayTimeDurationFromTime[silk#arg->output] .
output[silk#type->xsd#time] .
subtractDayTimeDurationFromDTimeBp[silk#out->output] .
swrlb#subtractDayTimeDurationFromTime[silk#arg->input2] .
subtractDayTimeDurationFromDTimeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurationFromTime"^^_string)] .
swrlb#subtractDayTimeDurationFromTime[silk#arg->input1] .
swrlb#subtractDayTimeDurationFromTime[silk#binding->subtractDayTimeDurationFromDTimeBp] .
swrlb#subtractDayTimeDurationFromTime : silk#ExternalPredicate .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
output[silk#type->xsd#duration] .
swrlb#subtractDayTimeDurations[silk#arg->output] .
subtractDayTimeDurationsBp[silk#out->output] .
swrlb#subtractDayTimeDurations[silk#arg->input1] .
swrlb#subtractDayTimeDurations[silk#binding->subtractDayTimeDurationsBp] .
subtractDayTimeDurationsBp[silk#in->input1] .
swrlb#subtractDayTimeDurations[silk#arg->input2] .
subtractDayTimeDurationsBp[silk#in->input2] .
swrlb#subtractDayTimeDurations : silk#ExternalPredicate .
subtractDayTimeDurationsBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractDayTimeDurations"^^_string)] .
subtractTimesBp[silk#in->input1] .
output[silk#type->xsd#duration] .
swrlb#subtractTimes[silk#binding->subtractTimesBp] .
subtractTimesBp[silk#out->output] .
input1[silk#type->xsd#time] .
input2[silk#type->xsd#time] .
swrlb#subtractTimes[silk#arg->output] .
subtractTimesBp[silk#in->input2] .
swrlb#subtractTimes[silk#arg->input1] .
subtractTimesBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractTimes"^^_string)] .
swrlb#subtractTimes[silk#arg->input2] .
swrlb#subtractTimes : silk#ExternalPredicate .
input2[silk#type->xsd#duration] .
swrlb#subtractYearMonthDurationFromDate[silk#binding->subtractYearMonthDurationFromDateBp] .
swrlb#subtractYearMonthDurationFromDate[silk#arg->input1] .
subtractYearMonthDurationFromDateBp[silk#in->input1] .
swrlb#subtractYearMonthDurationFromDate[silk#arg->output] .
subtractYearMonthDurationFromDateBp[silk#in->input2] .
input1[silk#type->xsd#date] .
output[silk#type->xsd#date] .
subtractYearMonthDurationFromDateBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractYearMonthDurationFromDate"^^_string)] .
subtractYearMonthDurationFromDateBp[silk#out->output] .
swrlb#subtractYearMonthDurationFromDate[silk#arg->input2] .
swrlb#subtractYearMonthDurationFromDate : silk#ExternalPredicate .
input2[silk#type->xsd#duration] .
subtractYearMonthDurationFromDateTimeBp[silk#in->input1] .
swrlb#subtractYearMonthDurationFromDateTime[silk#arg->output] .
swrlb#subtractYearMonthDurationFromDateTime : silk#ExternalPredicate .
swrlb#subtractYearMonthDurationFromDateTime[silk#binding->subtractYearMonthDurationFromDateTimeBp] .
subtractYearMonthDurationFromDateTimeBp[silk#in->input2] .
swrlb#subtractYearMonthDurationFromDateTime[silk#arg->input1] .
output[silk#type->xsd#dateTime] .
subtractYearMonthDurationFromDateTimeBp[silk#out->output] .
input1[silk#type->xsd#dateTime] .
subtractYearMonthDurationFromDateTimeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractYearMonthDurationFromDateTime"^^_string)] .
swrlb#subtractYearMonthDurationFromDateTime[silk#arg->input2] .
subtractYearMonthDurationsBp[silk#out->output] .
input2[silk#type->xsd#duration] .
input1[silk#type->xsd#duration] .
output[silk#type->xsd#duration] .
subtractYearMonthDurationsBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.SubtractYearMonthDurations"^^_string)] .
subtractYearMonthDurationsBp[silk#in->input1] .
swrlb#subtractYearMonthDurations : silk#ExternalPredicate .
subtractYearMonthDurationsBp[silk#in->input2] .
swrlb#subtractYearMonthDurations[silk#arg->output] .
swrlb#subtractYearMonthDurations[silk#arg->input1] .
swrlb#subtractYearMonthDurations[silk#arg->input2] .
swrlb#subtractYearMonthDurations[silk#binding->subtractYearMonthDurationsBp] .
swrlb#time[silk#arg->timeZone] .
swrlb#time[silk#arg->seconds] .
timeBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.Time"^^_string)] .
swrlb#time[silk#arg->output] .
swrlb#time[silk#arg->hours] .
timeZone[silk#type->xsd#string] .
swrlb#time : silk#ExternalPredicate .
timeBp[silk#in->seconds] .
timeBp[silk#in->timeZone] .
timeBp[silk#in->minutes] .
timeBp[silk#out->output] .
swrlb#time[silk#arg->minutes] .
swrlb#time[silk#binding->timeBp] .
output[silk#type->xsd#time] .
hours[silk#type->xsd#integer] .
timeBp[silk#in->hours] .
minutes[silk#type->xsd#integer] .
seconds[silk#type->xsd#integer] .
years[silk#type->xsd#integer] .
yearMonthDurationBp[silk#in->years] .
output[silk#type->xsd#duration] .
swrlb#yearMonthDuration[silk#arg->years] .
swrlb#yearMonthDuration[silk#binding->yearMonthDurationBp] .
swrlb#yearMonthDuration : silk#ExternalPredicate .
months[silk#type->xsd#integer] .
swrlb#yearMonthDuration[silk#arg->months] .
yearMonthDurationBp[silk#javaClass->("org.daml.swrl.jena.builtins.date.YearMonthDuration"^^_string)] .
swrlb#yearMonthDuration[silk#arg->output] .
yearMonthDurationBp[silk#out->output] .
yearMonthDurationBp[silk#in->months] .
equalBp[silk#in->input2] .
equalBp[silk#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.Equal"^^_string)] .
equalBp[silk#in->input1] .
swrlb#equal[silk#arg->input2] .
swrlb#equal[silk#binding->equalBp] .
swrlb#equal[silk#arg->input1] .
swrlb#equal : silk#ExternalPredicate .
input1[silk#type->xsd#string] .
input2[silk#type->xsd#string] .
greaterThan[silk#in->input1] .
swrlb#greaterThan[silk#arg->input2] .
greaterThan[silk#in->input2] .
swrlb#greaterThan[silk#binding->greaterThan] .
swrlb#greaterThan[silk#arg->input1] .
input1[silk#type->xsd#string] .
swrlb#greaterThan : silk#ExternalPredicate .
input2[silk#type->xsd#string] .
greaterThan[silk#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.GreaterThan"^^_string)] .
greaterThanOrEqualBp[silk#in->input1] .
greaterThanOrEqualBp[silk#in->input2] .
swrlb#greaterThanOrEqual[silk#arg->input1] .
swrlb#greaterThanOrEqual[silk#arg->input2] .
swrlb#greaterThanOrEqual : silk#ExternalPredicate .
swrlb#greaterThanOrEqual[silk#binding->greaterThanOrEqualBp] .
greaterThanOrEqualBp[silk#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.GreaterThanOrEqual"^^_string)] .
input1[silk#type->xsd#string] .
input2[silk#type->xsd#string] .
swrlb#lessThan[silk#binding->lessThanBp] .
lessThanBp[silk#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.LessThan"^^_string)] .
swrlb#lessThan : silk#ExternalPredicate .
swrlb#lessThan[silk#arg->input2] .
lessThanBp[silk#in->input2] .
input1[silk#type->xsd#string] .
swrlb#lessThan[silk#arg->input1] .
input2[silk#type->xsd#string] .
lessThanBp[silk#in->input1] .
lessThanOrEqualBp[silk#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.LessThanOrEqual"^^_string)] .
swrlb#lessThanOrEqual[silk#arg->input1] .
swrlb#lessThanOrEqual[silk#binding->lessThanOrEqualBp] .
input1[silk#type->xsd#string] .
swrlb#lessThanOrEqual : silk#ExternalPredicate .
lessThanOrEqualBp[silk#in->input2] .
lessThanOrEqualBp[silk#in->input1] .
input2[silk#type->xsd#string] .
swrlb#lessThanOrEqual[silk#arg->input2] .
equalBp[silk#in->input2] .
equalBp[silk#javaClass->("org.daml.swrl.jena.builtins.genericcomparison.NotEqual"^^_string)] .
equalBp[silk#in->input1] .
swrlb#notEqual[silk#arg->input1] .
swrlb#notEqual[silk#binding->equalBp] .
swrlb#notEqual[silk#arg->input2] .
input1[silk#type->xsd#string] .
input2[silk#type->xsd#string] .
swrlb#notEqual : silk#ExternalPredicate .
protocol[silk#type->xsd#string] .
swrlb#anyURI[silk#arg->fragment] .
anyURIBp1[silk#in->part2] .
swrlb#anyURI[silk#arg->port] .
anyURIBp2[silk#out->port] .
swrlb#anyURI[silk#arg->part1] .
swrlb#anyURI[silk#arg->uri] .
swrlb#anyURI[silk#arg->protocol] .
part1[silk#type->xsd#string] .
anyURIBp2[silk#javaClass->("org.daml.swrl.jena.builtins.uri.AnyURI"^^_string)] .
anyURIBp2[silk#out->protocol] .
swrlb#anyURI : silk#ExternalPredicate .
part2[silk#type->xsd#string] .
anyURIBp2[silk#out->part1] .
swrlb#anyURI[silk#binding->anyURIBp1] .
anyURIBp1[silk#in->fragment] .
port[silk#type->xsd#string] .
anyURIBp2[silk#out->fragment] .
swrlb#anyURI[silk#arg->part2] .
anyURIBp2[silk#out->domain] .
fragment[silk#type->xsd#string] .
anyURIBp1[silk#in->port] .
domain[silk#type->xsd#string] .
anyURIBp1[silk#in->domain] .
uri[silk#type->xsd#string] .
anyURIBp2[silk#out->part2] .
anyURIBp1[silk#out->uri] .
swrlb#anyURI[silk#arg->domain] .
anyURIBp1[silk#in->protocol] .
swrlb#anyURI[silk#binding->anyURIBp2] .
anyURIBp1[silk#in->part1] .
anyURIBp2[silk#in->uri] .
anyURIBp1[silk#javaClass->("org.daml.swrl.jena.builtins.uri.AnyURI"^^_string)] .
swrlb#resolveURI[silk#arg->input2] .
output[silk#type->xsd#string] .
swrlb#resolveURI[silk#arg->input1] .
resolveURIBp[silk#out->output] .
resolveURIBp[silk#in->input1] .
swrlb#resolveURI[silk#binding->resolveURIBp] .
resolveURIBp[silk#javaClass->("org.daml.swrl.jena.builtins.uri.ResolveURI"^^_string)] .
resolveURIBp[silk#in->input2] .
input1[silk#type->xsd#string] .
swrlb#resolveURI : silk#ExternalPredicate .
input2[silk#type->xsd#string] .
swrlb#resolveURI[silk#arg->output] .
containsBp[silk#in->input2] .
containsBp[silk#in->input1] .
swrlb#contains[silk#arg->input2] .
input1[silk#type->xsd#string] .
swrlb#contains[silk#arg->input1] .
swrlb#contains : silk#ExternalPredicate .
swrlb#contains[silk#binding->containsBp] .
input2[silk#type->xsd#string] .
containsBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.Contains"^^_string)] .
swrlb#containsIgnoreCase : silk#ExternalPredicate .
containsIgnoreCaseBp[silk#in->input2] .
containsIgnoreCaseBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.ContainsIgnoreCase"^^_string)] .
containsIgnoreCaseBp[silk#in->input1] .
swrlb#containsIgnoreCase[silk#binding->containsIgnoreCaseBp] .
swrlb#containsIgnoreCase[silk#arg->input1] .
swrlb#containsIgnoreCase[silk#arg->input2] .
input1[silk#type->xsd#string] .
input2[silk#type->xsd#string] .
endsWithBp[silk#in->input1] .
swrlb#endsWith : silk#ExternalPredicate .
endsWithBp[silk#in->input2] .
endsWithBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.EndsWith"^^_string)] .
swrlb#endsWith[silk#binding->endsWithBp] .
input1[silk#type->xsd#string] .
swrlb#endsWith[silk#arg->input1] .
input2[silk#type->xsd#string] .
swrlb#endsWith[silk#arg->input2] .
output[silk#type->xsd#string] .
swrlb#lowerCase : silk#ExternalPredicate .
swrlb#lowerCase[silk#arg->input] .
swrlb#lowerCase[silk#arg->output] .
input[silk#type->xsd#string] .
lowerCaseBp[silk#out->output] .
lowerCaseBp[silk#in->input] .
swrlb#lowerCase[silk#binding->lowerCaseBp] .
lowerCaseBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.LowerCase"^^_string)] .
matchesBp[silk#in->input2] .
swrlb#matches : silk#ExternalPredicate .
matchesBp[silk#in->input1] .
swrlb#matches[silk#binding->matchesBp] .
matchesBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.Matches"^^_string)] .
input1[silk#type->xsd#string] .
input2[silk#type->xsd#string] .
swrlb#matches[silk#arg->input2] .
swrlb#matches[silk#arg->input1] .
normalizeSpaceBp[silk#in->input] .
output[silk#type->xsd#string] .
swrlb#normalizeSpace : silk#ExternalPredicate .
swrlb#normalizeSpace[silk#arg->input] .
swrlb#normalizeSpace[silk#arg->output] .
swrlb#normalizeSpace[silk#binding->normalizeSpaceBp] .
input[silk#type->xsd#string] .
normalizeSpaceBp[silk#out->output] .
normalizeSpaceBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.NormalizeSpace"^^_string)] .
swrlb#replace[silk#arg->input] .
swrlb#replace : silk#ExternalPredicate .
swrlb#replace[silk#binding->replaceBp] .
replaceBp[silk#in->regex] .
swrlb#replace[silk#arg->regex] .
swrlb#replace[silk#arg->output] .
replaceBp[silk#in->input] .
replacement[silk#type->xsd#string] .
regex[silk#type->xsd#string] .
swrlb#replace[silk#arg->replacement] .
output[silk#type->xsd#string] .
replaceBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.Replace"^^_string)] .
replaceBp[silk#out->output] .
input[silk#type->xsd#string] .
replaceBp[silk#in->replacement] .
swrlb#startsWith[silk#arg->input2] .
startsWithBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.StartsWith"^^_string)] .
startsWithBp[silk#in->input1] .
swrlb#startsWith[silk#arg->input1] .
startsWithBp[silk#in->input2] .
input1[silk#type->xsd#string] .
swrlb#startsWith : silk#ExternalPredicate .
input2[silk#type->xsd#string] .
swrlb#startsWith[silk#binding->startsWithBp] .
stringConcatBp[silk#in->input2] .
output[silk#type->xsd#string] .
stringConcatBp[silk#out->output] .
stringConcatBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.StringConcat"^^_string)] .
swrlb#stringConcat[silk#arg->input1] .
swrlb#stringConcat[silk#arg->output] .
stringConcatBp[silk#in->input1] .
swrlb#stringConcat : silk#ExternalPredicate .
swrlb#stringConcat[silk#arg->input2] .
input1[silk#type->xsd#string] .
input2[silk#type->xsd#string] .
swrlb#stringConcat[silk#binding->stringConcatBp] .
swrlb#stringEqualIgnoreCase[silk#arg->input2] .
stringEqualIgnoreCaseBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.StringEqualIgnoreCase"^^_string)] .
swrlb#stringEqualIgnoreCase[silk#arg->input1] .
swrlb#stringEqualIgnoreCase : silk#ExternalPredicate .
swrlb#stringEqualIgnoreCase[silk#binding->stringEqualIgnoreCaseBp] .
input1[silk#type->xsd#string] .
stringEqualIgnoreCaseBp[silk#in->input1] .
input2[silk#type->xsd#string] .
stringEqualIgnoreCaseBp[silk#in->input2] .
swrlb#stringLength[silk#arg->input] .
swrlb#stringLength : silk#ExternalPredicate .
stringLengthBp[silk#out->output] .
swrlb#stringLength[silk#arg->output] .
input[silk#type->xsd#string] .
output[silk#type->xsd#integer] .
stringLengthBp[silk#in->input] .
stringLengthBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.StringLength"^^_string)] .
swrlb#stringLength[silk#binding->stringLengthBp] .
substringBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.Substring"^^_string)] .
swrlb#substring[silk#binding->substringBp] .
substringBp[silk#in->input] .
substringBp[silk#in->length] .
substringBp[silk#in->start] .
swrlb#substring : silk#ExternalPredicate .
start[silk#type->xsd#integer] .
output[silk#type->xsd#string] .
swrlb#substring[silk#arg->output] .
swrlb#substring[silk#arg->length] .
swrlb#substring[silk#arg->start] .
swrlb#substring[silk#arg->input] .
length[silk#type->xsd#integer] .
input[silk#type->xsd#string] .
substringBp[silk#out->output] .
start[silk#type->xsd#integer] .
output[silk#type->xsd#string] .
substringAfterBp[silk#in->input] .
swrlb#substringAfter : silk#ExternalPredicate .
substringAfterBp[silk#in->start] .
swrlb#substringAfter[silk#binding->substringAfterBp] .
input[silk#type->xsd#string] .
swrlb#substringAfter[silk#arg->input] .
substringAfterBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.SubstringAfter"^^_string)] .
substringAfterBp[silk#out->output] .
swrlb#substringAfter[silk#arg->output] .
swrlb#substringAfter[silk#arg->start] .
swrlb#substringBefore[silk#arg->end] .
output[silk#type->xsd#string] .
substringBeforeBp[silk#in->input] .
substringBeforeBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.SubstringBefore"^^_string)] .
end[silk#type->xsd#integer] .
substringBeforeBp[silk#in->end] .
swrlb#substringBefore[silk#binding->substringBeforeBp] .
swrlb#substringBefore : silk#ExternalPredicate .
input[silk#type->xsd#string] .
swrlb#substringBefore[silk#arg->input] .
swrlb#substringBefore[silk#arg->output] .
substringBeforeBp[silk#out->output] .
translateBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.Translate"^^_string)] .
translateBp[silk#in->input] .
replacement[silk#type->xsd#string] .
swrlb#translate[silk#binding->translateBp] .
translateBp[silk#out->output] .
output[silk#type->xsd#string] .
swrlb#translate[silk#arg->replace] .
replace[silk#type->xsd#string] .
swrlb#translate[silk#arg->replacement] .
input[silk#type->xsd#string] .
swrlb#translate : silk#ExternalPredicate .
translateBp[silk#in->replacement] .
swrlb#translate[silk#arg->input] .
translateBp[silk#in->replace] .
swrlb#translate[silk#arg->output] .
upperCaseBp[silk#out->output] .
output[silk#type->xsd#string] .
upperCaseBp[silk#javaClass->("org.daml.swrl.jena.builtins.string.UpperCase"^^_string)] .
swrlb#upperCase : silk#ExternalPredicate .
swrlb#upperCase[silk#arg->input] .
swrlb#upperCase[silk#binding->upperCaseBp] .
input[silk#type->xsd#string] .
upperCaseBp[silk#in->input] .
swrlb#upperCase[silk#arg->output] .
sparqlQueryBP[silk#out->outputs] .
sparqlQueryBP[silk#in->template] .
silk#sparqlQuery : silk#ExternalPredicate .
silk#sparqlQuery[silk#arg->inputs] .
silk#sparqlQuery[silk#arg->uri] .
sparqlQueryBP[silk#in->uri] .
outputs[silk#type->silk#list] .
sparqlQueryBP[silk#in->inputs] .
silk#sparqlQuery[silk#binding->sparqlQueryBP] .
template[silk#type->xsd#string] .
inputs[silk#type->silk#list] .
silk#sparqlQuery[silk#arg->template] .
silk#sparqlQuery[silk#arg->outputs] .
uri[silk#type->xsd#anyURI] .
sparqlQueryBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.SPARQLQueryPredicate"^^_string)] .
sparqlQueryBP[silk#in->template] .
silk#sparqlConstruct[silk#arg->template] .
silk#sparqlConstruct : silk#ExternalPredicate .
sparqlQueryBP[silk#out->filename] .
sparqlQueryBP[silk#in->uri] .
silk#sparqlConstruct[silk#arg->filename] .
silk#sparqlConstruct[silk#arg->inputs] .
sparqlQueryBP[silk#in->inputs] .
filename[silk#type->xsd#string] .
silk#sparqlConstruct[silk#arg->uri] .
template[silk#type->xsd#string] .
inputs[silk#type->silk#list] .
sparqlQueryBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.SPARQLConstructPredicate"^^_string)] .
silk#sparqlConstruct[silk#binding->sparqlQueryBP] .
uri[silk#type->xsd#anyURI] .
silk#restWebService[silk#binding->sparqlQueryBP] .
sparqlQueryBP[silk#out->outputs] .
silk#restWebService[silk#arg->outputs] .
silk#restWebService[silk#arg->uri] .
silk#restWebService[silk#arg->inputs] .
silk#restWebService : silk#ExternalPredicate .
sparqlQueryBP[silk#in->uri] .
outputs[silk#type->silk#list] .
sparqlQueryBP[silk#in->inputs] .
sparqlQueryBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.RESTWebServicePredicate"^^_string)] .
inputs[silk#type->silk#list] .
silk#restWebService[silk#arg->xpath] .
xpath[silk#type->xsd#string] .
sparqlQueryBP[silk#in->xpath] .
uri[silk#type->xsd#anyURI] .
to[silk#type->xsd#string] .
silkb#sendEmail[silk#arg->from] .
sendEmailBP[silk#in->from] .
sendEmailBP[silk#in->smtpServer] .
sendEmailBP[silk#in->text] .
from[silk#type->xsd#string] .
text[silk#type->xsd#string] .
silkb#sendEmail[silk#arg->text] .
silkb#sendEmail[silk#arg->to] .
sendEmailBP[silk#in->to] .
silkb#sendEmail : silk#ExternalPredicate .
silkb#sendEmail[silk#arg->subject] .
silkb#sendEmail[silk#arg->smtpServer] .
subject[silk#type->xsd#string] .
silkb#sendEmail[silk#binding->sendEmailBP] .
smtpServer[silk#type->xsd#string] .
sendEmailBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.EmailPredicate"^^_string)] .
sendEmailBP[silk#in->subject] .
writeBP[silk#in->input] .
silkb#write[silk#arg->input] .
writeBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.WritePredicate"^^_string)] .
silkb#write : silk#ExternalPredicate .
input[silk#type->xsd#anyType] .
silkb#write[silk#binding->writeBP] .
silkb#writeLn[silk#binding->writeLnBP] .
writeLnBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.WriteLinePredicate"^^_string)] .
silkb#writeLn[silk#arg->input] .
writeLnBP[silk#in->input] .
input[silk#type->xsd#anyType] .
silkb#writeLn : silk#ExternalPredicate .
addbp[silk#in->url] .
addbp[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.SilkQueryPredicate"^^_string)] .
silkb#querySilkInstance[silk#arg->url] .
silkb#querySilkInstance[silk#arg->inputs] .
outputsBindingOrder[silk#type->silk#list] .
url[silk#type->xsd#string] .
outputs[silk#type->silk#list] .
silkb#querySilkInstance : silk#ExternalPredicate .
silkb#querySilkInstance[silk#binding->addbp] .
addbp[silk#in->template] .
template[silk#type->xsd#string] .
inputs[silk#type->silk#list] .
addbp[silk#out->outputs] .
addbp[silk#in->inputs] .
silkb#querySilkInstance[silk#arg->outputsBindingOrder] .
silkb#querySilkInstance[silk#arg->outputs] .
addbp[silk#in->outputsBindingOrder] .
silkb#querySilkInstance[silk#arg->template] .
silkb#fatal[silk#binding->fatalBP] .
silkb#fatal[silk#arg->loggerName] .
loggerName[silk#type->xsd#string] .
fatalBP[silk#in->message] .
fatalBP[silk#in->loggerName] .
silkb#fatal[silk#arg->message] .
message[silk#type->xsd#string] .
fatalBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.log4j.FatalPredicate"^^_string)] .
silkb#fatal : silk#ExternalPredicate .
loggerName[silk#type->xsd#string] .
errorBP[silk#in->loggerName] .
silkb#error[silk#arg->message] .
silkb#error[silk#arg->loggerName] .
errorBP[silk#in->message] .
silkb#error : silk#ExternalPredicate .
errorBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.log4j.ErrorPredicate"^^_string)] .
message[silk#type->xsd#string] .
silkb#error[silk#binding->errorBP] .
silkb#warn[silk#arg->message] .
loggerName[silk#type->xsd#string] .
silkb#warn[silk#binding->warnBP] .
warnBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.log4j.WarnPredicate"^^_string)] .
silkb#warn[silk#arg->loggerName] .
warnBP[silk#in->loggerName] .
message[silk#type->xsd#string] .
warnBP[silk#in->message] .
silkb#warn : silk#ExternalPredicate .
loggerName[silk#type->xsd#string] .
silkb#info[silk#binding->infoBP] .
infoBP[silk#in->loggerName] .
silkb#info[silk#arg->loggerName] .
infoBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.log4j.InfoPredicate"^^_string)] .
message[silk#type->xsd#string] .
silkb#info : silk#ExternalPredicate .
infoBP[silk#in->message] .
silkb#info[silk#arg->message] .
debugBP[silk#in->loggerName] .
debugBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.log4j.DebugPredicate"^^_string)] .
loggerName[silk#type->xsd#string] .
silkb#debug[silk#arg->message] .
silkb#debug[silk#arg->loggerName] .
debugBP[silk#in->message] .
silkb#debug[silk#binding->debugBP] .
message[silk#type->xsd#string] .
silkb#debug : silk#ExternalPredicate .
loggerName[silk#type->xsd#string] .
traceBP[silk#in->loggerName] .
traceBP[silk#in->message] .
silkb#trace[silk#arg->message] .
traceBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.log4j.TracePredicate"^^_string)] .
silkb#trace[silk#arg->loggerName] .
message[silk#type->xsd#string] .
silkb#trace : silk#ExternalPredicate .
silkb#trace[silk#binding->traceBP] .
silkb#cycEvaluate : silk#ExternalPredicate .
cycEvaluateBP[silk#out->output] .
arg2[silk#type->xsd#string] .
output[silk#type->xsd#string] .
silkb#cycEvaluate[silk#arg->arg1] .
arg1[silk#type->xsd#string] .
silkb#cycEvaluate[silk#arg->arg2] .
predicate[silk#type->xsd#string] .
silkb#cycEvaluate[silk#arg->output] .
cycEvaluateBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.cyc.CycEvaluatePredicate"^^_string)] .
cycEvaluateBP[silk#in->predicate] .
silkb#cycEvaluate[silk#binding->cycEvaluateBP] .
cycEvaluateBP[silk#in->arg2] .
silkb#cycEvaluate[silk#arg->predicate] .
cycEvaluateBP[silk#in->arg1] .
cycEvaluateBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.cyc.CycQueryPredicate"^^_string)] .
silkb#cycQuery : silk#ExternalPredicate .
silkb#cycQuery[silk#arg->query] .
cycEvaluateBP[silk#in->query] .
OutputBindings[silk#type->xsd#string] .
silkb#cycQuery[silk#arg->OutputBindings] .
cycEvaluateBP[silk#out->OutputBindings] .
silkb#cycQuery[silk#binding->cycEvaluateBP] .
query[silk#type->xsd#string] .
currentTime[silk#type->xsd#dateTime] .
silkb#currentTime[silk#binding->cycEvaluateBP] .
silkb#currentTime[silk#arg->currentTime] .
cycEvaluateBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.CurrentTimePredicate"^^_string)] .
cycEvaluateBP[silk#out->currentTime] .
silkb#currentTime : silk#ExternalPredicate .
silkb#returnNResults[silk#arg->OutputBindings] .
silkb#returnNResults[silk#arg->n] .
silkb#returnNResults[silk#binding->returnNResultsBP] .
OutputBindings[silk#type->xsd#string] .
returnNResultsBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.ReturnNResultsPredicate"^^_string)] .
returnNResultsBP[silk#out->OutputBindings] .
returnNResultsBP[silk#in->n] .
silkb#returnNResults : silk#ExternalPredicate .
n[silk#type->xsd#int] .
silkb#identity[silk#binding->identityBP] .
silkb#identity[silk#arg->output] .
identityBP[silk#in->input] .
input[silk#type->xsd#anyType] .
output[silk#type->xsd#anyType] .
identityBP[silk#out->output] .
silkb#identity[silk#arg->input] .
identityBP[silk#javaClass->("org.semwebcentral.silk.externalpredicates.predicates.IdentityPredicate"^^_string)] .
silkb#identity : silk#ExternalPredicate .
?- set_prolog_flag(max_table_subgoal_depth, 500)@_prolog.
?- set_prolog_flag(exception_pre_action,print_incomplete_tables)@_prolog.
?- setsemantics{equality(basic)}.
?- setsemantics{tabling(incremental)}.
:- flora_compiler_options([production_mode]).
:- symbol_context silk#instRule(?,?,?)@? .

