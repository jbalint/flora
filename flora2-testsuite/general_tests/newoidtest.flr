?- insert{abc[prop1->_#, prop2->_#3, prop3->_#3],
            cde[prop1->_#, prop2->_#3, prop3->_#]}.
%test1 :- abc[prop1->_#, prop2->_#5, prop3->_#5], writeln('test1 ok')@_plg.
%test2 :- (cde[prop1->_#, prop2->_#5, prop3->_#5] -->> writeln('test2 failed')@_plg
          ; writeln('test2 ok')@_plg
          ).

head1(${head11(?X,_#) :- body11(_#1,_#1)}).

%test3 :- head1(${head11(?X,?Y) :- body11(_#1,_#1)}), _isskolem(?Y), writeln('test3 ok')@_plg.

?- insert{p(a), p(_#)}.
%test4 :- (?X = ${p(_#)}, ?X -->> writeln('test4 failed')@_plg
          ; writeln('test4 ok')@_plg
          ).

%test5 :- ?X = ${pppp(_#)}, insert{?X}, pppp(_#), writeln('test5 ok')@_plg.


%test6 :- ?X = ${p(_#2,_#2)}, insert{?X}, p(_#7,_#7), writeln('test6 ok')@_plg.

%test7 :- (erase{p(?,?)}, ?X = ${p(_#2,_#)}, insert{?X}, p(_#7,_#7)
          -->> writeln('test7 failed')@_plg
          ; writeln('test7 ok')@_plg
          ).

%pretest :- %test1, %test2, %test3, %test4, %test5, %test6, %test7.

%test :-
	tell(temp)@_plg(),
	%pretest,
	told@_plg().

