?- Method[mustDefine(on)]@_sys.


?- insertrule{qqq : www(bbb) :- true}.
?- insertrule{neg qqq : zzz(bbb) :- true}.


ppp : fff(?) :- true.
ddd : ttt(?).

neg kkk(a,f(?))(b,c) :- true.

neg aaa(g(?),kk,f(?)) :- true.
neg aaa[g(?) -> f(?)] :- true.
neg aaa[g -> f] :- true.
neg aaa[dd -> ?] :- true.

neg aaa[g(?_X) *=> f(?_Y)] :- true.

neg bb[mm => vv].
bb:bbbb.

neg uuu[nnn *=> www].
uuu::vvvv.

%insertion :- insert{
	g(a): ii4(?X,f(r)),
	neg cc[aa=>h(aaa,bbb)],
	cccc[aa*=>()],
	neg cc[=>h(aaa,bbb)],
	cc:cccc,
	p:pap(?X),
        neg iii(a,f(b))(c,c)
      }.



%test1 :- write('test01: ')@_plg, a:zzz(bbb),
          !, writeln('failed')@_plg.
%test1 :- writeln('success')@_plg.
          
%test2 :- write('test02: ')@_plg, neg a:www(bbb),
	  !, writeln('failed')@_plg.
%test2 :- writeln('success')@_plg.

%test3 :- deleterule{neg ?:zzz(?) :- ?},
	 catch{a:zzz(bbb),?,fail},
	 writeln('test03: undefinedness check failed')@_io.
%test3 :- writeln('test03: undefined error caught - success')@_io.

%test4 :- deleterule{?:www(?) :- ?},
	 catch{neg a:www(bbb),?,fail},
	 writeln('test04: undefinedness check failed')@_io.
%test4 :- writeln('test04: undefined error caught - success')@_io.

%test5 :- write('test05: ')@_plg, kkk(a,f(?))(b,f(?)),
	  !, writeln('failed')@_plg.
%test5 :- writeln('success')@_plg.

%test6 :- write('test06: ')@_plg, a : fff(?),
	  !, writeln('failed')@_plg.
%test6 :- writeln('success')@_plg.

%test7 :- write('test07: ')@_plg, aaa(?,kk,?),
	  !, writeln('failed')@_plg.
%test7 :- writeln('success')@_plg.

%test8 :- write('test08: ')@_plg, neg aaa(?,?,?),
	  writeln('success')@_plg.

%test9 :- write('test09: ')@_plg, neg aaa[? -> f(a)],
	  writeln('success')@_plg.

%test10 :- write('test10: ')@_plg, neg bb[? => ?Y],
	  ?Y \= (?,?), ?Y != ? - ?,
	  writeln('success')@_plg.

%test11 :- write('test11: ')@_plg, neg aaa[? *=> f(a)],
	  writeln('success')@_plg.

%test12 :- write('test12: ')@_plg, neg bbbb[? *=> ?Y],
	  ?Y!= (?,?), ?Y!= ? - ?,
	  writeln('success')@_plg.

%test13 :- write('test13: ')@_plg, neg vvvv[? *=> www],
	  writeln('success')@_plg.

%test14 :- write('test14: ')@_plg,
	   catch{iii(a,f(?))(b,c),?,fail},
	   writeln('undefinedness check failed')@_io.
%test14 :- writeln('undefined error caught - success')@_io.

%test15 :- write('test15: ')@_plg,
	   catch{cc[=>h(?,bbb)],?,fail},
	   writeln('undefinedness check failed')@_io.
%test15 :- writeln('undefined error caught - success')@_io.

%test16 :- write('test16: ')@_plg,
	   catch{neg g(?): ii4(?,f(r)),?,fail},
	   writeln('undefinedness check failed')@_io.
%test16 :- writeln('undefined error caught - success')@_io.

%test17 :-  write('test17: ')@_plg,
	    %insertion,
	    neg cccc[aa *=>h(aaa,?)],
	    writeln('success')@_plg.

%test18 :-  write('test18: ')@_plg,
	    neg q:pap(b),
	    !, writeln('failed')@_plg.
%test18 :-  writeln('success')@_plg.

%test19 :-  write('test19: ')@_plg,
	    neg g(?): ii4(?,f(r)),
	    !,
	    writeln('failed')@_plg.
%test19 :-  writeln('success')@_plg.

%test20 :-  write('test20: ')@_plg,
	     catch{neg iii(b,f(?))(?,?), ?, fail},
	   writeln('undefinedness check failed')@_io.
%test20 :- writeln('undefined error caught - success')@_io.

%test21 :-  write('test21: ')@_plg,
	     neg iii(a,f(?))(?,?),
	     writeln('success')@_plg.

%pretest :- %test1, %test2, %test3, %test4, %test5, %test6, %test7, %test8,
	    %test9, %test10, %test11, %test12, %test13, %test14, %test15,
	    %test16, %test17, %test18, %test19, %test20, %test21.

%test :- tell(temp)@_plg(),
	%pretest,
	told@_plg().
