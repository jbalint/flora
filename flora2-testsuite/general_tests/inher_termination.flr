p(?X)[?M*->?V] :- ?X[?M*->?V].
a[m*->v].
a[mm*->vv].

b::a.
c:b.

b[neg mm *->p]. // should cancel inheritance of mm to b and c.
c[neg m->pp].   // should cancel inheritance of m to c

//?- _optimize(local_override).

%tst1 :- a[?M*->?V],
	(write('tst1: '), write(meth=?M), write(' '), writeln(val=?V))@_plg(),
	fail.
%tst1 :- true.

%tst2 :- p(a)[?M*->?V],
	(write('tst2: '), write(meth=?M), write(' '), writeln(val=?V))@_plg(),
	fail.
%tst2 :- true.

%tst3 :- write('tst3: ')@_plg,
	 if (b[mm*->?] or c[mm*->?]) then writeln(failure)@_plg
         else writeln(success)@_plg.

%tst4 :- write('tst4: ')@_plg,
	 if c[m*->?] then writeln(failure)@_plg
         else writeln(success)@_plg.

%pretest :- %tst1, %tst2, %tst3, %tst4, !, setsemantics{equality(basic)},
	    %tst3, %tst4.

%test :- tell(temp)@_plg(),
	Method[mustDefine(on)]@_sys,
	%pretest,
	!,
	Method[mustDefine(off)]@_sys,
	abolish_all_tables,
	%pretest,
	told@_plg().



