
:- uriprefix abc="ftp://u@foo.bar.com/bla".
:- uriprefix abc1='http://vv@bar.foo.com/aaa'.
:- uriprefix abc2=mailto.

// these are used to test if typed variables get bound correctly
ppp(?X^^foo) :- ?Y = ?X^^foo,
	       (write('compiled varY='),
	        flora_write_oid(?Y)@_plg(flrdecode),
		write(' varX='),
	        flora_write_oid(?X)@_plg(flrdecode))@_plg.
qqq(?X^^_t) :- ?Y = ?X^^_t, ?Y="23:33:44"^^_t,
	       write('compiled varX=')@_plg,
	       flora_write_oid(?X)@_plg(flrdecode).
qqq2(?Y^^_t) :- ?Y = ?X^^_t, ?X="23:33:44"^^_t,
	       write('compiled varY=')@_plg,
	       flora_write_oid(?Y)@_plg(flrdecode).


?- insertrule{rrr(?X^^moo) :- ?Y = ?X^^moo,
	                      (write('inserted varY='),
			       flora_write_oid(?Y)@_plg(flrdecode),
			       write(' varX='),
			       flora_write_oid(?X)@_plg(flrdecode))@_plg}.
?- insertrule{fff(?X) :- ?Y = ?X^^_dt, ?Y="2002-02-12T23:33:44+02:09"^^_dt,
	                   write('inserted varX=')@_plg,
			   flora_write_oid(?X)@_plg(flrdecode)}.


%test0 :-  write('test0: ')@_prolog,
	"2007-11-22+11:33"^^_d[year->?Y]@_basetype, ?Y:_integer,
	"2007-11-22-11:33"^^_d[day->?D]@_basetype, ?D:_integer,
	"2007-11-22+11:33"^^_d[month->?Mon]@_basetype, ?Mon:_integer,
	"2007-11-22"^^_d[zoneHour->?ZH]@_basetype, ?ZH:_integer,
	"2007-11-22-12:00"^^_d[zoneSign->?ZS]@_basetype, ?ZH:_integer,
	"2007-11-22-12:00"^^_d[zoneHour->?ZH2]@_basetype, ?ZH:_integer,
	"2007-11-22+11:33"^^_d[zoneMinute->?ZM]@_basetype,?ZM:_integer,
	"2007-11-22"^^_d[zoneMinute->?ZM2]@_basetype,?ZM:_integer,
	"2007-11-22+11:33"^^_d[toSymbol->?Str]@_basetype,
	"2007-11-22"^^_d[toSymbol->?Str2]@_basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon),
	  write('|'), write(?ZS), write('|'), write(?ZH), write('|'),
	  write(?ZH2), write('|'),
	  write(?ZM), write('|'),write(?ZM2),
	  write('-->'), write(?Str), write('-->'), write(?Str2), 
	  nl )@_plg.

%test1 :-  write('test1: ')@_prolog,
	"2007-11-22T23:33:55+11:33"^^_dt[year->?Y]@_basetype, ?Y:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[day->?D]@_basetype, ?D:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[month->?Mon]@_basetype, ?Mon:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[hour->?Hr]@_basetype, ?Hr:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[minute->?Min]@_basetype, ?Min:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[second->?Sec]@_basetype, ?Sec:_decimal,
	"2007-11-22T23:33:55-11:33"^^_dt[zoneSign->?ZS]@_basetype, ?ZS:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[zoneHour->?ZH]@_basetype, ?ZH:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[zoneMinute->?ZM]@_basetype,?ZM:_integer,
	"2007-11-22T23:33:55+11:33"^^_dt[toSymbol->?Str]@_basetype,
	"2007-11-22T23:33:55.2233+11:33"^^_dt[toSymbol->?Str2]@_basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon), write('|'),
	  write(?Hr), write('|'), write(?Min), write('|'), write(?Sec),
	  write('|'), write(?ZS), write('|'), write(?ZH), write('|'),write(?ZM),
	  write('-->'), write(?Str), write('-->'), write(?Str2), 
	  nl )@_plg.

%test2 :-  write('test2: ')@_prolog,
	"2007-11-22"^^_dt[year->?Y]@_basetype, ?Y:_integer,
	"2007-11-22"^^_dt[day->?D]@_basetype, ?D:_integer,
	"2007-11-22"^^_dt[month->?Mon]@_basetype, ?Mon:_integer,
	"2007-11-22"^^_dt[hour->?Hr]@_basetype, ?Hr:_integer,
	"2007-11-22"^^_dt[minute->?Min]@_basetype, ?Min:_integer,
	"2007-11-22"^^_dt[second->?Sec]@_basetype, ?Sec:_decimal,
	"2007-11-22"^^_dt[zoneSign->?ZS]@_basetype, ?ZS:_integer,
	"2007-11-22"^^_dt[zoneHour->?ZH]@_basetype, ?ZH:_integer,
	"2007-11-22"^^_dt[zoneMinute->?ZM]@_basetype,?ZM:_integer,
	"2007-11-22"^^_dt[toSymbol->?Str]@_basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon), write('|'),
	  write(?Hr),write('|'),write(?Min),write('|'),write(?Sec),write('|'),
	  write(?ZS), write('|'), write(?ZH), write('|'), write(?ZM),
	  write('-->'), write(?Str), nl )@_plg.

%test3 :-  write('test3: ')@_prolog,
	"2007-11-22T23:33:55"^^_dt[year->?Y]@_basetype, ?Y:_integer,
	"2007-11-22T23:33:55"^^_dt[day->?D]@_basetype, ?D:_integer,
	"2007-11-22T23:33:55"^^_dt[month->?Mon]@_basetype, ?Mon:_integer,
	"2007-11-22T23:33:55.234"^^_dt[hour->?Hr]@_basetype, ?Hr:_integer,
	"2007-11-22T23:33:55"^^_dt[minute->?Min]@_basetype, ?Min:_integer,
	"2007-11-22T23:33:55.234"^^_dt[second->?Sec]@_basetype, ?Sec:_decimal,
	"2007-11-22T23:33:55"^^_dt[zoneSign->?ZS]@_basetype, ?ZS:_integer,
	"2007-11-22T23:33:55"^^_dt[zoneHour->?ZH]@_basetype, ?ZH:_integer,
	"2007-11-22T23:33:55"^^_dt[zoneMinute->?ZM]@_basetype,?ZM:_integer,
	"2007-11-22T23:33:55"^^_dt[toSymbol->?Str]@_basetype,
	"2007-11-22T23:33:55.2233"^^_dt[toSymbol->?Str2]@_basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon), write('|'),
	  write(?Hr), write('|'), write(?Min), write('|'), write(?Sec),
	  write('|'), write(?ZS), write('|'), write(?ZH),write('|'),write(?ZM),
	  write('-->'), write(?Str),
	  write('-->'), write(?Str2),
	  nl )@_plg.

%test4 :-  write('test4: ')@_prolog,
	"23:33:55"^^_t[hour->?Hr]@_basetype, ?Hr:_integer,
	"23:33:55"^^_t[minute->?Min]@_basetype, ?Min:_integer,
	"23:33:55"^^_t[second->?Sec]@_basetype, ?Sec:_decimal,
	"23:33:55-12:30"^^_t[zoneSign->?ZS]@_basetype, ?ZS:_integer,
	"23:33:55.2233-12:30"^^_t[zoneHour->?ZH]@_basetype, ?ZH:_integer,
	"23:33:55-12:30"^^_t[zoneMinute->?ZM]@_basetype, ?ZM:_integer,
	"23:33:55"^^_t[toSymbol->?Str]@_basetype,
	"23:33:55+11:00"^^_t[toSymbol->?Str2]@_basetype,
	"23:33:55.2233"^^_t[toSymbol->?Str3]@_basetype,
	"23:33:55.2233+11:00"^^_t[toSymbol->?Str4]@_basetype,
	( write(?Hr), write('|'), write(?Min),
          write('|'), write(?Sec),
          write('|'), write(?ZS),
          write('|'), write(?ZH),
          write('|'), write(?ZM),
	  write('-->'), write(?Str),
	  write('-->'), write(?Str2),
	  write('-->'), write(?Str3),
	  write('-->'), write(?Str4),
	  nl )@_plg.


%test5 :-  write('test5: ')@_prolog,
	  _"http://foouser@foo.bar.com:22/path?query#fragment"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.
	 
%test6 :-  write('test6: ')@_prolog,
	  _"http://foo.bar.com/path?query#fragment"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test7 :-  write('test7: ')@_prolog,
	  _"http://foo.bar.com/path#fragment"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test8 :-  write('test8: ')@_prolog,
	  _"http://foo.bar.com:22/path?query"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test9 :-  write('test9: ')@_prolog,
	  _"http://foo.bar.com:22/path"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test10 :-  write('test10: ')@_prolog,
	  _"http://foo.bar.com:22"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test11 :-  write('test11: ')@_prolog,
	  _"mailto:user@foo.bar.com"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test12 :-  write('test12: ')@_prolog,
	  _"file:///abc/cde/efg"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test13 :-  write('test13: ')@_prolog,
	  _"urn:abc123:something:else"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@_basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@_plg.

%test14 :-  write('test14: ')@_prolog,
	abc#"#bar"[path -> ?P, user->?U, toSymbol->?Str]@_basetype,
	(write(?P), write('+'), write(?U), write('-->'), write(?Str), nl)@_plg.

%test15 :-  write('test15: ')@_prolog,
	    ?O = abc#"#bar",
	    ?O1 = abc#bar,
	    ?O2 = abc#'#bar',
	    ?OO = abc1#"#bar",
	    ?OO1 = abc1#bar,
	    ?OO2 = abc1#'#bar',
	    ?OOO = abc2#':foo@bar',
	    ?OOO1 = abc2#":foo@bar",
	    (write(?O.toSymbol@_basetype), write('+'),
	     write(?O1.toSymbol@_basetype), write('+'),
	     write(?O2.toSymbol@_basetype),write('+'),
	     write(?OO.toSymbol@_basetype), write('+'),
	     write(?OO1.toSymbol@_basetype),write('+'),
	     write(?OO2.toSymbol@_basetype), write('+'),
	     write(?OOO.toSymbol@_basetype), write('+'),
	     write(?OOO1.toSymbol@_basetype), nl)@_plg.

%test16 :- write('test16: ')@_prolog,
	   ppp("abc"^^foo),
	   nl@_plg.

%test17 :- write('test17: ')@_prolog,
	   qqq(?),
	   nl@_plg.

%test18 :- write('test18: ')@_prolog,
	   qqq2(?),
	   nl@_plg.

%test19 :- write('test19: ')@_prolog,
	   rrr("cde"^^moo),
	   nl@_plg.

%test20 :- write('test20: ')@_prolog,
	   fff(?),
	   nl@_plg.

%test21 :- write('test21: ')@_prolog,
	   "P2001Y11M12DT22H11M55.33S"^^_duration[hour->?Hr]@_basetype,
	   ?Hr:_integer,
	   "-P2001Y11M12DT22H11M55.33S"^^_duration[minute->?Min]@_basetype,
	   ?Min:_integer,
	   "P11M12DT11M55.33S"^^_duration[second->?Sec]@_basetype,?Sec:_decimal,
	   "-P11M12DT11M55S"^^_duration[year->?Yr1]@_basetype, ?Yr1:_integer,
	   "-P11M12DT11M55S"^^_duration[month->?Mo]@_basetype, ?Mo:_integer,
	   "-P2001Y11M12DT22H11M55.33S"^^_duration[day->?D]@_basetype,
	   ?D:_integer,
	   "-P2001Y11M12DT22H11M55.33S"^^_duration[year->?Yr2]@_basetype,
	   "-P2001Y11M12DT22H11M55.33S"^^_duration[toSymbol->?Str]@_basetype,
	   "-P11M12DT11M55S"^^_duration[toSymbol->?Str2]@_basetype,
	   "P11M12DT11M55.33S"^^_duration[toSymbol->?Str3]@_basetype,
	   ( write(?Yr1), write('|'), write(?Yr2), write('|'), write(?Mo), 
	     write('|'), write(?Hr), write('|'), write(?Min),
	     write('|'), write(?Sec),
	     write('|'), write(?D),
	     write('-->'), write(?Str),
	     write('-->'), write(?Str2),
	     write('-->'), write(?Str3),
	     nl )@_plg.

%test22 :- write('test22: ')@_prolog,
	   _time[toType(11,22,33.222,1,2,33)->?P]@_basetype,
	   ?P[minute->?Min]@_basetype,
	   _duration[toType(-1,0,22,44,2,3,44.999)->?T]@_basetype,
	   ?T[month->?Mo]@_basetype,
	   writeln(?Mo+?Min)@_plg.

%test23 :- write('test23: ')@_prolog,
	   pmoo(?X)@foo,
	   writeln(?X)@_prolog.

%abc#cde(a,b).
%abc1#foo(?X,?Y) :- %abc#cde(?Y,?X), insert{%abc1#bar(p)}.

%test24 :- write('test24: ')@_prolog,
	   ?L = setof{?Z| %?Z(?,?) or %?Z(?)},
	   flora_write_oid(?L)@_plg(flrdecode),
	   nl@_plg.

%test25  :- write('test25: ')@_prolog,
	(
	   "http://example.com"^^_iri[toSymbol->?A1],
	   "aaaa"^^_string[toSymbol->?A2],
	   "5"^^_long[toSymbol->?A3],
	   5[toSymbol->?A4],
	   5.5[toSymbol->?A5],
	   [5][toSymbol->?A6],
	   ["5"^^_long, "http://example.com"^^_iri][toSymbol->?A7]
        )@_basetype,
	(
	    write(?A1), write(' '),
	    write(?A2), write(' '),
	    write(?A3), write(' '),
	    write(?A4), write(' '),
	    write(?A5), write(' '),
	    write(?A6), write(' '),
	    write(?A7), write(' '),
	    nl
	)@_prolog.

%test26  :- write('test26: ')@_prolog,
	    _symbol[concat([abc,"abc",123,"456"^^_long,f(a),[b,v],"2012-11-23"^^_date])->?R]@_basetype,
	    writeln(?R)@_plg.

%pretest :- %test0, %test1, %test2 and %test3 and %test4,
	    %test5, %test6, %test7, %test8, %test9,
	    %test10, %test11, %test12, %test13, %test14, %test15,
	    %test16, %test17, %test18, %test19, %test20, %test21,
	    %test22, %test23, %test24, %test25, %test26.

%test :- [basetype_moo>>moo],
	[basetype_foo>>foo],
	tell(temp)@_plg(),
	Method[mustDefine(on)]@_sys,
	%pretest,
	!,
	Method[mustDefine(off)]@_sys,
	Tables[abolish]@_sys,
	%pretest,
	told@_plg().
