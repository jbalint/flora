
:- iriprefix{abc="ftp://u@foo.bar.com/bla"}.
:- iriprefix{abc1='http://vv@bar.foo.com/aaa'}.
:- iriprefix{abc2=mailto}.

// these are used to test if typed variables get bound correctly
ppp(?X^^foo) :- ?Y = ?X^^foo,
	       (write('compiled varY='),
	        flora_write_oid(?Y)@\plg(flrdecode),
		write(' varX='),
	        flora_write_oid(?X)@\plg(flrdecode))@\plg.
qqq(?X^^\t) :- ?Y = ?X^^\t, ?Y="23:33:44"^^\t,
	       write('compiled varX=')@\plg,
	       flora_write_oid(?X)@\plg(flrdecode).
qqq2(?Y^^\t) :- ?Y = ?X^^\t, ?X="23:33:44"^^\t,
	       write('compiled varY=')@\plg,
	       flora_write_oid(?Y)@\plg(flrdecode).


?- insertrule{rrr(?X^^moo) :- ?Y = ?X^^moo,
	                      (write('inserted varY='),
			       flora_write_oid(?Y)@\plg(flrdecode),
			       write(' varX='),
			       flora_write_oid(?X)@\plg(flrdecode))@\plg}.
?- insertrule{fff(?X) :- ?Y = ?X^^\dt, ?Y="2002-02-12T23:33:44+02:09"^^\dt,
	                   write('inserted varX=')@\plg,
			   flora_write_oid(?X)@\plg(flrdecode)}.


%test0 :-  write('test0: ')@\prolog,
	"2007-11-22+11:33"^^\d[year->?Y]@\basetype, ?Y:\integer,
	"2007-11-22-11:33"^^\d[day->?D]@\basetype, ?D:\integer,
	"2007-11-22+11:33"^^\d[month->?Mon]@\basetype, ?Mon:\integer,
	"2007-11-22"^^\d[zoneHour->?ZH]@\basetype, ?ZH:\integer,
	"2007-11-22-12:00"^^\d[zoneSign->?ZS]@\basetype, ?ZH:\integer,
	"2007-11-22-12:00"^^\d[zoneHour->?ZH2]@\basetype, ?ZH:\integer,
	"2007-11-22+11:33"^^\d[zoneMinute->?ZM]@\basetype,?ZM:\integer,
	"2007-11-22"^^\d[zoneMinute->?ZM2]@\basetype,?ZM:\integer,
	"2007-11-22+11:33"^^\d[toSymbol->?Str]@\basetype,
	"2007-11-22"^^\d[toSymbol->?Str2]@\basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon),
	  write('|'), write(?ZS), write('|'), write(?ZH), write('|'),
	  write(?ZH2), write('|'),
	  write(?ZM), write('|'),write(?ZM2),
	  write('-->'), write(?Str), write('-->'), write(?Str2), 
	  nl )@\plg.

%test1 :-  write('test1: ')@\prolog,
	"2007-11-22T23:33:55+11:33"^^\dt[year->?Y]@\basetype, ?Y:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[day->?D]@\basetype, ?D:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[month->?Mon]@\basetype, ?Mon:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[hour->?Hr]@\basetype, ?Hr:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[minute->?Min]@\basetype, ?Min:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[second->?Sec]@\basetype, ?Sec:\decimal,
	"2007-11-22T23:33:55-11:33"^^\dt[zoneSign->?ZS]@\basetype, ?ZS:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[zoneHour->?ZH]@\basetype, ?ZH:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[zoneMinute->?ZM]@\basetype,?ZM:\integer,
	"2007-11-22T23:33:55+11:33"^^\dt[toSymbol->?Str]@\basetype,
	"2007-11-22T23:33:55.2233+11:33"^^\dt[toSymbol->?Str2]@\basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon), write('|'),
	  write(?Hr), write('|'), write(?Min), write('|'), write(?Sec),
	  write('|'), write(?ZS), write('|'), write(?ZH), write('|'),write(?ZM),
	  write('-->'), write(?Str), write('-->'), write(?Str2), 
	  nl )@\plg.

%test2 :-  write('test2: ')@\prolog,
	"2007-11-22"^^\dt[year->?Y]@\basetype, ?Y:\integer,
	"2007-11-22"^^\dt[day->?D]@\basetype, ?D:\integer,
	"2007-11-22"^^\dt[month->?Mon]@\basetype, ?Mon:\integer,
	"2007-11-22"^^\dt[hour->?Hr]@\basetype, ?Hr:\integer,
	"2007-11-22"^^\dt[minute->?Min]@\basetype, ?Min:\integer,
	"2007-11-22"^^\dt[second->?Sec]@\basetype, ?Sec:\decimal,
	"2007-11-22"^^\dt[zoneSign->?ZS]@\basetype, ?ZS:\integer,
	"2007-11-22"^^\dt[zoneHour->?ZH]@\basetype, ?ZH:\integer,
	"2007-11-22"^^\dt[zoneMinute->?ZM]@\basetype,?ZM:\integer,
	"2007-11-22"^^\dt[toSymbol->?Str]@\basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon), write('|'),
	  write(?Hr),write('|'),write(?Min),write('|'),write(?Sec),write('|'),
	  write(?ZS), write('|'), write(?ZH), write('|'), write(?ZM),
	  write('-->'), write(?Str), nl )@\plg.

%test3 :-  write('test3: ')@\prolog,
	"2007-11-22T23:33:55"^^\dt[year->?Y]@\basetype, ?Y:\integer,
	"2007-11-22T23:33:55"^^\dt[day->?D]@\basetype, ?D:\integer,
	"2007-11-22T23:33:55"^^\dt[month->?Mon]@\basetype, ?Mon:\integer,
	"2007-11-22T23:33:55.234"^^\dt[hour->?Hr]@\basetype, ?Hr:\integer,
	"2007-11-22T23:33:55"^^\dt[minute->?Min]@\basetype, ?Min:\integer,
	"2007-11-22T23:33:55.234"^^\dt[second->?Sec]@\basetype, ?Sec:\decimal,
	"2007-11-22T23:33:55"^^\dt[zoneSign->?ZS]@\basetype, ?ZS:\integer,
	"2007-11-22T23:33:55"^^\dt[zoneHour->?ZH]@\basetype, ?ZH:\integer,
	"2007-11-22T23:33:55"^^\dt[zoneMinute->?ZM]@\basetype,?ZM:\integer,
	"2007-11-22T23:33:55"^^\dt[toSymbol->?Str]@\basetype,
	"2007-11-22T23:33:55.2233"^^\dt[toSymbol->?Str2]@\basetype,
	( write(?Y), write('|'), write(?D), write('|'), write(?Mon), write('|'),
	  write(?Hr), write('|'), write(?Min), write('|'), write(?Sec),
	  write('|'), write(?ZS), write('|'), write(?ZH),write('|'),write(?ZM),
	  write('-->'), write(?Str),
	  write('-->'), write(?Str2),
	  nl )@\plg.

%test4 :-  write('test4: ')@\prolog,
	"23:33:55"^^\t[hour->?Hr]@\basetype, ?Hr:\integer,
	"23:33:55"^^\t[minute->?Min]@\basetype, ?Min:\integer,
	"23:33:55"^^\t[second->?Sec]@\basetype, ?Sec:\decimal,
	"23:33:55-12:30"^^\t[zoneSign->?ZS]@\basetype, ?ZS:\integer,
	"23:33:55.2233-12:30"^^\t[zoneHour->?ZH]@\basetype, ?ZH:\integer,
	"23:33:55-12:30"^^\t[zoneMinute->?ZM]@\basetype, ?ZM:\integer,
	"23:33:55"^^\t[toSymbol->?Str]@\basetype,
	"23:33:55+11:00"^^\t[toSymbol->?Str2]@\basetype,
	"23:33:55.2233"^^\t[toSymbol->?Str3]@\basetype,
	"23:33:55.2233+11:00"^^\t[toSymbol->?Str4]@\basetype,
	( write(?Hr), write('|'), write(?Min),
          write('|'), write(?Sec),
          write('|'), write(?ZS),
          write('|'), write(?ZH),
          write('|'), write(?ZM),
	  write('-->'), write(?Str),
	  write('-->'), write(?Str2),
	  write('-->'), write(?Str3),
	  write('-->'), write(?Str4),
	  nl )@\plg.


%test5 :-  write('test5: ')@\prolog,
	  \"http://foouser@foo.bar.com:22/path?query#fragment"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.
	 
%test6 :-  write('test6: ')@\prolog,
	  \"http://foo.bar.com/path?query#fragment"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test7 :-  write('test7: ')@\prolog,
	  \"http://foo.bar.com/path#fragment"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test8 :-  write('test8: ')@\prolog,
	  \"http://foo.bar.com:22/path?query"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test9 :-  write('test9: ')@\prolog,
	  \"http://foo.bar.com:22/path"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test10 :-  write('test10: ')@\prolog,
	  \"http://foo.bar.com:22"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test11 :-  write('test11: ')@\prolog,
	  \"mailto:user@foo.bar.com"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test12 :-  write('test12: ')@\prolog,
	  \"file:///abc/cde/efg"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test13 :-  write('test13: ')@\prolog,
	  \"urn:abc123:something:else"
            [ scheme->?P,
	      user->?U,
	      host->?H,
	      port->?Pt,
	      path->?Ph,
	      query->?Q,
	      fragment->?F,
	      toSymbol -> ?Str
	    ]@\basetype,
	 ( write(?P), write('+'), write(?U), write('+'), write(?H), write('+'),
	   write(?Pt), write('+'), write(?Ph), write('+'), write(?Q),
	   write('+'), write(?F), write('-->'), write(?Str), nl )@\plg.

%test14 :-  write('test14: ')@\prolog,
	abc#"#bar"[path -> ?P, user->?U, toSymbol->?Str]@\basetype,
	(write(?P), write('+'), write(?U), write('-->'), write(?Str), nl)@\plg.

%test15 :-  write('test15: ')@\prolog,
	    ?O = abc#"#bar",
	    ?O1 = abc#bar,
	    ?O2 = abc#'#bar',
	    ?OO = abc1#"#bar",
	    ?OO1 = abc1#bar,
	    ?OO2 = abc1#'#bar',
	    ?OOO = abc2#':foo@bar',
	    ?OOO1 = abc2#":foo@bar",
	    (write(?O.toSymbol@\basetype), write('+'),
	     write(?O1.toSymbol@\basetype), write('+'),
	     write(?O2.toSymbol@\basetype),write('+'),
	     write(?OO.toSymbol@\basetype), write('+'),
	     write(?OO1.toSymbol@\basetype),write('+'),
	     write(?OO2.toSymbol@\basetype), write('+'),
	     write(?OOO.toSymbol@\basetype), write('+'),
	     write(?OOO1.toSymbol@\basetype), nl)@\plg.

%test16 :- write('test16: ')@\prolog,
	   ppp("abc"^^foo),
	   nl@\plg.

%test17 :- write('test17: ')@\prolog,
	   qqq(?),
	   nl@\plg.

%test18 :- write('test18: ')@\prolog,
	   qqq2(?),
	   nl@\plg.

%test19 :- write('test19: ')@\prolog,
	   rrr("cde"^^moo),
	   nl@\plg.

%test20 :- write('test20: ')@\prolog,
	   fff(?),
	   nl@\plg.

%test21 :- write('test21: ')@\prolog,
	   "P2001Y11M12DT22H11M55.33S"^^\duration[hour->?Hr]@\basetype,
	   ?Hr:\integer,
	   "-P2001Y11M12DT22H11M55.33S"^^\duration[minute->?Min]@\basetype,
	   ?Min:\integer,
	   "P11M12DT11M55.33S"^^\duration[second->?Sec]@\basetype,?Sec:\decimal,
	   "-P11M12DT11M55S"^^\duration[year->?Yr1]@\basetype, ?Yr1:\integer,
	   "-P11M12DT11M55S"^^\duration[month->?Mo]@\basetype, ?Mo:\integer,
	   "-P2001Y11M12DT22H11M55.33S"^^\duration[day->?D]@\basetype,
	   ?D:\integer,
	   "-P2001Y11M12DT22H11M55.33S"^^\duration[year->?Yr2]@\basetype,
	   "-P2001Y11M12DT22H11M55.33S"^^\duration[toSymbol->?Str]@\basetype,
	   "-P11M12DT11M55S"^^\duration[toSymbol->?Str2]@\basetype,
	   "P11M12DT11M55.33S"^^\duration[toSymbol->?Str3]@\basetype,
	   ( write(?Yr1), write('|'), write(?Yr2), write('|'), write(?Mo), 
	     write('|'), write(?Hr), write('|'), write(?Min),
	     write('|'), write(?Sec),
	     write('|'), write(?D),
	     write('-->'), write(?Str),
	     write('-->'), write(?Str2),
	     write('-->'), write(?Str3),
	     nl )@\plg.

%test22 :- write('test22: ')@\prolog,
	   \time[toType(11,22,33.222,1,2,33)->?P]@\basetype,
	   ?P[minute->?Min]@\basetype,
	   \duration[toType(-1,0,22,44,2,3,44.999)->?T]@\basetype,
	   ?T[month->?Mo]@\basetype,
	   writeln(?Mo+?Min)@\plg.

%test23 :- write('test23: ')@\prolog,
	   pmoo(?X)@foo,
	   writeln(?X)@\prolog.

%abc#cde(a,b).
%abc1#foo(?X,?Y) :- %abc#cde(?Y,?X), insert{%abc1#bar(p)}.

%test24 :- write('test24: ')@\prolog,
	   ?L = setof{?Z| %?Z(?,?) \or %?Z(?)},
	   flora_write_oid(?L)@\plg(flrdecode),
	   nl@\plg.

%test25  :- write('test25: ')@\prolog,
	(
	   "http://example.com"^^\iri[toSymbol->?A1],
	   "aaaa"^^\string[toSymbol->?A2],
	   "5"^^\long[toSymbol->?A3],
	   5[toSymbol->?A4],
	   5.5[toSymbol->?A5],
	   [5][toSymbol->?A6],
	   ["5"^^\long, "http://example.com"^^\iri][toSymbol->?A7]
        )@\basetype,
	(
	    write(?A1), write(' '),
	    write(?A2), write(' '),
	    write(?A3), write(' '),
	    write(?A4), write(' '),
	    write(?A5), write(' '),
	    write(?A6), write(' '),
	    write(?A7), write(' '),
	    nl
	)@\prolog.

%test26  :- write('test26: ')@\prolog,
	    \symbol[concat([abc,"abc",123,"456"^^\long,f(a),[b,v],"2012-11-23"^^\date])->?R]@\basetype,
	    writeln(?R)@\plg.

%test27  :- write('test27: ')@\prolog, ?L= "true"^^xsd#boolean, ?LL="123"^^xsd#integer, flora_write_oid(?L+?LL)@\plg(flrdecode), nl@\io.

%pretest :- %test0, %test1, %test2 \and %test3 \and %test4,
	    %test5, %test6, %test7, %test8, %test9,
	    %test10, %test11, %test12, %test13, %test14, %test15,
	    %test16, %test17, %test18, %test19, %test20, %test21,
	    %test22, %test23, %test24, %test25, %test26, %test27.

%test :- [basetype_moo>>moo],
	[basetype_foo>>foo],
	tell(temp)@\plg(),
	Method[mustDefine(on)]@\sys,
	%pretest,
	!,
	Method[mustDefine(off)]@\sys,
	Tables[abolish]@\sys,
	%pretest,
	told@\plg().
