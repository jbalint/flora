
// warnings
%m_as_p(?M)(?O) :- ?O[%?M].

%splice(?L,?Off,?Len,?Rep,?L2,?Lx) :-
	%append(?Begin,?Rep,?End,?L2).

?O[%set(?N,?V)] :- %splice(?L,?N,1,[?V],?L1,?_).

?O:project[%foo(?D)] :- %m_as_p(bar(?D))(f1).

// errors
%p :- \if %a \then %b \else (\if %a \then %b \else (\if %a \then %b \then %c)).
%p :- \if %a \then %b \then %c.
%p :- \if (%b \then %c) \then %d.
%p :- %b \then %c.
%p :- (\if %a \then %b) @ m.
%p(\if a).
%p :- insert{\if %a}.


%p :- \while %a \do %b.
%p :- \while %a \loop %b.
%p :- \loop %a \until %b.
%p :- \do %a \until %b.
%p :- \unless %a \do %b.
\do(a,b) :- \true.
\until(a,b) :- \true.
\loop(a,b) :- \true.
\while(b) :- \true.
\loop(b) :- \true.
\unless(b) :- \true.

?- insert{\neg (a,b)@w}. // should give an error, if in Flora

?- insertrule{a :- ?x=count{?k|true@?V}}. // should give an error

"bla"^^\string[a => +a<b[foo->blob]].
// these should not give an error
"bla"^^\string[a => +a<b],b[foo->blob].
pppp(a<1).

// error because \neg propagates through to ?X=2 and = is not neg-negatable
?- \naf \neg exists(?X)^(?X=2,pppp(?X)).

p(a.b[]).
p(a[d].b).
?- p(a.b[e]).
?- p(a[d].b).
?- p(a[d].b[h]).
?- a =.. b[c].
?- p(a:b).
?- p(a::b[p]).
p(a::b[p]).
p(a::b).
a[g]:b[c].
?- a[g]:b[c].

?- insert{a::b[p]}.
?- insert{p(a::b[p])}.
?- insert{p(a[d].b)}.
?- delete{p(a[d].b[p])}.
?- insert{a[d].b[p]}.

// these should generate errors and not cause infinite loop
aa \or ?bb :- \true.
aa \or ?bb.

// errors
?- aaaa(%"abc"^^\string(p)).
?- aaaa(%"abc"^^\string).
aaaa(%"abc"^^\string(p)).
aaaa(%"abc"^^\string).
?- insert{aaaa(%"abc"^^\string)}.
?- insert{aaaa(%"abc"^^\string(?))}.

