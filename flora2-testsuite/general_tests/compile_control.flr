
// warnings
%m_as_p(?M)(?O) :- ?O[%?M].

%splice(?L,?Off,?Len,?Rep,?L2,?Lx) :-
	%append(?Begin,?Rep,?End,?L2).

?O[%set(?N,?V)] :- %splice(?L,?N,1,[?V],?L1,?_).

?O:project[%foo(?D)] :- %m_as_p(bar(?D))(f1).

// errors
%p :- if %a then %b else (if %a then %b else (if %a then %b then %c)).
%p :- if %a then %b then %c.
%p :- if (%b then %c) then %d.
%p :- %b then %c.
%p :- (if %a then %b) @ m.
%p(if a).
%p :- insert{if %a}.


%p :- while %a do %b.
%p :- while %a loop %b.
%p :- loop %a until %b.
%p :- do %a until %b.
%p :- unless %a do %b.
do(a,b) :- true.
until(a,b) :- true.
loop(a,b) :- true.
while(b) :- true.
loop(b) :- true.
unless(b) :- true.

?- insert{neg (a,b)@w}. // should give an error

?- insertrule{a :- ?x=count{?k|true@?V}}. // should give an error

// these should not give an error
"bla"^^_string[a => +a<b[foo->blob]].
pppp(a<1).

// error because neg propagates through to ?X=2 and = is not neg-negatable
?- naf neg exists(?X)^(?X=2,pppp(?X)).
