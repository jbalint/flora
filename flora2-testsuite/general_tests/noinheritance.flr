

:- setsemantics{inheritance(none)}.

c1[aaa {1:1}*=>  _symbol].
c1[bbb *=> _symbol].
c1[aaa *->  b].
c1[bbb *-> c].

c2::c1.
o1:c1.

// value inheritance - should not work
%tst1 :- write('tst1: ')@_plg(),
	if o1[aaa ->  ?_X]
        then writeln(failed)@_plg()
        else writeln(succeeded)@_plg().
%tst2 :- write('tst2: ')@_plg(),
	if o1[bbb ->  ?_X]
        then writeln(failed)@_plg()
        else writeln(succeeded)@_plg().
// classes
%tst3 :- write('tst3: ')@_plg(),
	if c2[aaa *->  ?_X]
        then writeln(failed)@_plg()
        else writeln(succeeded)@_plg().
%tst4 :- write('tst4: ')@_plg(),
	if c2[bbb *->  ?_X]
        then writeln(failed)@_plg()
        else writeln(succeeded)@_plg().

// type inheritance - should work
%tst5 :- write('tst5: ')@_plg(),
	if o1[aaa {1:1}=>  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
%tst6 :- write('tst6: ')@_plg(),
	if o1[bbb =>  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
// classes
%tst7 :- write('tst7: ')@_plg(),
	if c2[aaa {1:1}*=>  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
%tst8 :- write('tst8: ')@_plg(),
	if c2[bbb *=>  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().


// Change semantics before tst9: Now value inheritance should start working
%tst9 :- write('tst9: ')@_plg(),
	if o1[aaa ->  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
%tst10 :- write('tst10: ')@_plg(),
	if o1[bbb ->  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
// classes
%tst11 :- write('tst11: ')@_plg(),
	if c2[aaa *->  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
%tst12 :- write('tst12: ')@_plg(),
	if c2[bbb *->  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().

// type inheritance - should continue working
%tst13 :- write('tst13: ')@_plg(),
	if o1[aaa {1:1}=>  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().
// classes
%tst14 :- write('tst14: ')@_plg(),
	if c2[aaa {1:1}*=>  ?_X]
        then writeln(succeeded)@_plg()
        else writeln(failed)@_plg().

%pretest :- 
	    setsemantics{inheritance(none)},
	    %tst1, %tst2, %tst3, %tst4, %tst5, %tst6, %tst7, %tst8,
	    setsemantics{inheritance(flogic)},
	    %tst9, %tst10, %tst11, %tst12, %tst13, %tst14.

%test :- tell(temp)@_plg(),
	Method[mustDefine(on)]@_sys,
	%pretest,
	Method[mustDefine(off)]@_sys,
	%pretest,
	told@_plg().


