
++Error[Flora-2]> [compile_control.flr] <Parser> near line(13)/char(61) `then'
                unexpected then-statement
++Error[Flora-2]> [compile_control.flr] <Parser> near line(14)/char(21) `then'
                unexpected then-statement
++Error[Flora-2]> [compile_control.flr] <Parser> near line(15)/char(14) `then'
                invalid then-statement
++Error[Flora-2]> [compile_control.flr] <Parser> near line(16)/char(10) `then'
                invalid then-statement
++Error[Flora-2]> [compile_control.flr] <Parser> near line(19)/char(14) `if'
                insertion into built-in predicates or attributes is illegal
++Error[Flora-2]> [compile_control.flr] <Parser> near line(27)/char(1) `do'
                redefinition of a built-in in rule head
++Error[Flora-2]> [compile_control.flr] <Parser> near line(29)/char(1) `loop'
                redefinition of a built-in in rule head
++Error[Flora-2]> [compile_control.flr] <Parser> near line(30)/char(1) `while'
                redefinition of a built-in in rule head
++Error[Flora-2]> [compile_control.flr] <Parser> near line(31)/char(1) `loop'
                redefinition of a built-in in rule head
++Error[Flora-2]> [compile_control.flr] <Parser> near line(32)/char(1) `unless'
                redefinition of a built-in in rule head
++Error[Flora-2]> [compile_control.flr] <Parser> near line(34)/char(11) `neg'
                only conjunction of literals (or equivalent) is allowed in rule heads and facts in this context
++Error[Flora-2]> [compile_control.flr] <Compiler> near line(36)/char(30) `?k'
                aggregate variable not in aggregate body
++Error[Flora-2]> [compile_control.flr] <Compiler> near line(43)/char(26) `='
                illegal use of explicit negation (NEG) in rule body

++13 errors

++compilation aborted


++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(6)/char(11) `?Begin'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(6)/char(23) `?End'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(10) `?L'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(18) `?Len'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(32) `?Lx'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(13) `?Off'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(10) `?L'
                  unsafe variable in rule head: does not occur in rule body
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(18) `?Len'
                  unsafe variable in rule head: does not occur in rule body
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(32) `?Lx'
                  unsafe variable in rule head: does not occur in rule body
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(5)/char(13) `?Off'
                  unsafe variable in rule head: does not occur in rule body
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(8)/char(29) `?L'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(8)/char(42) `?L1'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(8)/char(2) `?O'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(8)/char(2) `?O'
                  unsafe variable in rule head: does not occur in rule body
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(10)/char(2) `?O'
                  singleton variable
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(10)/char(2) `?O'
                  unsafe variable in rule head: does not occur in rule body
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(18)/char(1) `%p'
                  predicate symbol was previously used with a different number of arguments on line 17 in the same file 
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(18)/char(7) `a'
                  nontransactional symbol was previously used as transactional on line 17 in the same file 
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(28)/char(9) `b'
                  nontransactional symbol was previously used as transactional on line 17 in the same file 
++Warning[Flora-2]> [compile_control.flr] <Compiler> near line(36)/char(15) `a'
                  predicate symbol was previously used as a HiLog function symbol on line 18 in the same file 

++20 warnings

