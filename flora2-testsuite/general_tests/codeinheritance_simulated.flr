
a:c1.
b:c2.
c1::c2.

a[attr1->7, attr2->2].
b[attr1->5, attr2->4].

// method 1 defined for every instance
?X[foo(?Y) -> ?Z] :- ?X[attr1->?V], ?Z is ?V+?Y.
// method 2 defined for every instance
?X[bar(?Y) -> ?Z] :- ?X[attr2->?V], ?Z is ?V*?Y.


c2[meth *-> foo].
c1[meth *-> bar].

?X[invoke(meth)(?Y) -> ?Z] :- ?X[meth->?RealMeth], ?X[?RealMeth(?Y) -> ?Z].

%tst1 :- write('tst1: ')@_prlg, a[invoke(meth)(4) -> ?Z], writeln(?Z)@_prlg.
%tst2 :- write('tst2: ')@_prlg, b[invoke(meth)(4) -> ?Z], writeln(?Z)@_prlg.


%pretest :- abolish_all_tables, %tst1, %tst2.

%test :- tell(temp)@_prlg,
	Method[mustDefine(on)]@_sys,
	%pretest,
	Method[mustDefine(off)]@_sys,
	%pretest,
	told@_prolog.


