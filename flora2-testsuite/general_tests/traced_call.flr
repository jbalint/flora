a(abc):-u(1).
a(abc):-u(2).
u(1).
c(123):-w(1).
c(123):-w(2).
w(1).

?- insertrule{(b(cde):-v(1)),(b(cde):-v(2))}, insert{v(1)}.

%tst1 :-
	write('test1: ')@\plg,
	refresh{a(?)},
	?G = ${a(?)}, traced_call(?G,?CalledId,?F,?M)@\plg(flrcallflora),
	delete{u(1)}, insert{u(2)}, refresh{a(?)},
	traced_call(?G,?CalledId2,?F2,?M2)@\plg(flrcallflora),
	writeln(?CalledId+?CalledId2+?F+?F2+?M+?M2)@\plg.

%tst2 :-
	write('test2: ')@\plg,
	refresh{b(?)},
	?G = ${b(?)}, traced_call(?G,?CalledId,?F,?M)@\plg(flrcallflora),
	delete{v(1)}, insert{v(2)}, refresh{b(?)},
	traced_call(?G,?CalledId2,?F2,?M2)@\plg(flrcallflora),
	writeln(?CalledId+?CalledId2+?F+?F2+?M+?M2)@\plg.

%tst3 :-
	write('test3: ')@\plg,
	refresh{c(?)},
	traced_call(${c(?)},?CalledId,?F,?M)@\plg(flrcallflora),
	delete{w(1)}, insert{w(2)}, refresh{c(?)},
	traced_call(${c(?)},?CalledId2,?F2,?M2)@\plg(flrcallflora),
	writeln(?CalledId+?CalledId2+?F+?F2+?M+?M2)@\plg.

%pretest :- %tst1, %tst2, %tst3.

%test :- tell(temp)@\plg(),
	%pretest,
	Method[mustDefine(on)]@\sys,
	delete{u(2),v(2),w(2)}, insert{u(1),v(1),w(1)},
	%pretest,
	Method[mustDefine(off)]@\sys,
	told@\plg().
