/*******************************************************************************
  file: genincludes/flrrefreshtable.fli - Template rules for generating
                                          commands for deleting facts
  					  from Prolog tables.
  Author(s): Michael Kifer

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2010.

  All rights reserved.

  For information about licensing terms, please see
  http://silk.projects.semwebcentral.org/flora2-license.html

*******************************************************************************/


#include "flora_wspredicates.flh"

#include "flrrefreshtable_neg.inc"

%% ISA, SUB
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_SUB(X,Y,_Caller)) :-
	    	    !,
	       	    flora_abolish_table_call_carefully(WRAP_SUB(X,Y,_Caller)),
	       	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_SUB)(X,Y,_Caller))
	  )).
?- assert((
            FLORA_SYMBOL('refresh_table_for')(WRAP_ISA(X,Y,_Caller)) :-
	    	    !,
		    flora_abolish_table_call_carefully(WRAP_ISA(X,Y,_Caller)),
		    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_ISA)(X,Y,_Caller))
	  )).
	
%% MVD, IMVD
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_MVD(X,Y,Z,_Caller)) :-
	    	    !,
		    flora_abolish_table_call_carefully(WRAP_MVD(X,Y,Z,_Caller)),
		    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVD)(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_MVDDEF(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVDDEF)(X,Y,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_IMVD(X,Y,Z,Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_IMVD(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_IMVD)(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_IMVDDEF(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_IMVDDEF)(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_MVD(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVD)(X,Y,Z,_Caller))
	  )).

%% MVDSIG, IMVDSIG
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_MVDSIG(X,Y,Z,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_MVDSIG(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVDSIG)(X,Y,Z,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_IMVDSIG(X,Y,Z,_Caller)) :-  
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_IMVDSIG(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_IMVDSIG)(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_MVDSIG(X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVDSIG)(X,Y,Z,_Caller))
	  )).

%% MVDCONDEF, IMVDCONDEF
%% these two probably never need to be deleted explicitly
%% because MVDCONDEF, IMVDCONDEF wrappers are always derived predicates
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_MVDCONDEF(W,X,Y,Z,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_MVDCONDEF(W,X,Y,Z,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_IMVDCONDEF(W,X,Y,Z,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_IMVDCONDEF(W,X,Y,Z,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_MVDCONDEF(W,X,Y,Z,_Caller))
	  )).

%% MVDDEF, IMVDDEF

?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_MVDDEF(X,Y,_Caller)) :-
	    	    !,
		    flora_abolish_table_call_carefully(WRAP_MVDDEF(X,Y,_Caller)),
		    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVDDEF)(X,Y,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_IMVDDEF(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_IMVDDEF(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_IMVDDEF)(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_MVDDEF(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_MVDDEF)(X,Y,_Caller))
	  )).

%% METH, IMETH
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_METH(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_METH(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_METH)(X,Y,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_IMETH(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_IMETH(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_IMETH)(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_METH(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_METH)(X,Y,_Caller))
	  )).

%% BOOLSIG, IBOOLSIG
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_BOOLSIG(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_BOOLSIG(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_BOOLSIG)(X,Y,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_IBOOLSIG(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_IBOOLSIG(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_IBOOLSIG)(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_BOOLSIG(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_BOOLSIG)(X,Y,_Caller))
	  )).

%% TRANSIG, ITRANSIG
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TRANSIG(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_TRANSIG(X,Y,_Caller))
	  )).
	
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_ITRANSIG(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_ITRANSIG(X,Y,_Caller)),
	    	    flora_abolish_table_call_carefully(WRAP_TRANSIG(X,Y,_Caller))
	  )).

%% EXISTS, OBJEQL
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_EXISTS(X,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_EXISTS(X,_Caller)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_EXISTS)(X,_Caller))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_OBJEQL(X,Y,_Caller)) :-
	    	    !,
	    	    flora_abolish_table_call_carefully(WRAP_DIFFOBJEQL(X,Y,_Caller))
	  )).


%% HiLog, up to 21 arguments
/*
**    *** The rules below are just dummies - they don't work because it is
**        hard to efficiently convert a call of the form
***       WRAP_NONTABLED_HILOG(fun,args...)
**        to WRAP_TABLED_HILOG(rule-index,fun,args...)
**        When we switch to a different implementation of tabling we will
**        revisit these rules.
*/
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,_Caller)) :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,_))
	  )).
?- assert((
    	    FLORA_SYMBOL('refresh_table_for')(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,_Caller))
	    :-
	            !,
	    	    flora_abolish_table_call_carefully(WRAP_TABLED_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,_)),
	    	    flora_abolish_table_call_carefully(FLNEGPREFIX(WRAP_TABLED_HILOG)(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,_))
	  )).


