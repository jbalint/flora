## File:      flora2/AT/Makefile
## Author(s): kifer
## Contact:   flora-users@lists.sourceforge.net
## 
## Contact:   kifer@cs.stonybrook.edu
##
## Copyright (C) by
##      The Research Foundation of the State University of New York, 1999-2008.
##
## All rights reserved.
##
## For information about licensing terms, please see
## http://silk.projects.semwebcentral.org/flora2-license.html
##
##



OBJEXT=.xwam
PROLOGEXT=.P

FLORADIR=..

ALL = flrgclp$(PROLOGEXT) \
	gclpe$(PROLOGEXT) \
	ogclp$(PROLOGEXT) \
	sgclp$(PROLOGEXT) \
	ogclpe$(PROLOGEXT) \
	atck2$(PROLOGEXT) \
	atck3$(PROLOGEXT) \
	atco$(PROLOGEXT) \
	atck1alt$(PROLOGEXT)

Option = [optimize]


#-----------------------------------------------------------------------#
#
# Self-make: Version 1.4.1
#
PROLOG = none
PROLOG_COMMAND = $(PROLOG) -i -m 80000 -c 10000 -e 'segfault_handler(warn).'
#
#-----------------------------------------------------------------------#

# Make sure warnings are saved in a file.
SVFILE = '$(FLORADIR)/.flora_AT_warn.tmp'
STDWARN = 3
STDERR = 2
HDRMSG = "While compiling .../flora2/AT:"


# suffix rules
.SUFFIXES: ${PROLOGEXT} .flr

all: clean init recompile

recompile: $(ALL) finish
	@../touch.sh cmd...
	$(PROLOG_COMMAND) < cmd...
	@rm cmd...
	@cat $(SVFILE)

# System ATs, like flrgclp, should be treated here
flrgclp${PROLOGEXT}:
	echo 'flora_compile_system_module($*).' >> cmd...

# the default case
.flr${PROLOGEXT}:
	echo "import ('_compile')/1 from flora2. '_compile'($*)." >> cmd...

init:
	rm -f $(SVFILE)
	@echo "asserta(library_directory('..'))." >> cmd...
	@echo "['../flora2']." >> cmd...
	@echo "import bootstrap_flora/0 from flora2." >> cmd...
	@echo "bootstrap_flora." >> cmd...
	@echo "import flora_compile_system_module/1 from flrutils." >> cmd...
	@echo "file_reopen($(SVFILE),w,$(STDWARN),_)." >> cmd...
	@echo "file_clone($(STDWARN), $(STDERR),_)." >> cmd...
	@echo "write($(STDWARN),'-------------- Warnings/Errors --------------------'), nl($(STDWARN))." >> cmd...
	@echo "write($(STDWARN),'$(HDRMSG)'), nl($(STDWARN))." >> cmd...
	@echo "file_flush($(STDWARN), _)." >> cmd...

finish:
	@echo "write($(STDWARN),'-------------------- End --------------------------'), nl($(STDWARN))." >> cmd...


.DONE:
	echo Done

clean:
	/bin/rm -f *${PROLOGEXT} *$(OBJEXT) *.O *.fdb *~ .*~ *.fld *.flt *.flm *.fls *.fls2 *.con *.bak .#* cmd*
