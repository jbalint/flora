/*******************************************************************************
  file: closure/flrcommon_inh.fli - Inheritance-specific part common to all
				    trailers that support inheritance

  Author(s): Guizhen Yang

  Contact:   kifer@cs.stonybrook.edu

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2010.

  All rights reserved.

  For information about licensing terms, please see
  http://silk.projects.semwebcentral.org/flora2-license.html

*******************************************************************************/


#include "flora_wspredicates.flh"
#include "flora_porting.flh"


/*****************************************************************************
  inheritance book-keeping information for multivalued methods

  Note that the argument "Class" here is considered as a class.
  It is about inheritance from superclasses to subclasses.
*****************************************************************************/
override_class_imvd(C,MethSign,Class,CallerInfo) :-
	WRAP_SUB(X,C,CallerInfo),
	WRAP_SUB(Class,X,CallerInfo),
	X \= C,
	X \= Class,
	FLLOCALPREFIX(WRAP_IMVD)(X,MethSign,CallerInfo).


candidate_class_imvd(C,MethSign,Class,CallerInfo) :-
	var(MethSign),
	!,
	WRAP_SUB(Class,C,CallerInfo),
	FLLOCALPREFIX(WRAP_IMVD)(C,MethSign,CallerInfo),
	C \= Class,
	FLORA_NAF_EXISTS(override_class_imvd(C,MethSign,Class,CallerInfo)).

candidate_class_imvd(C,MethSign,Class,CallerInfo) :-
	FLLOCALPREFIX(WRAP_IMVD)(C,MethSign,CallerInfo),
	WRAP_SUB(Class,C,CallerInfo),
	C \= Class,
	FLORA_NAF_EXISTS(override_class_imvd(C,MethSign,Class,CallerInfo)).


multiple_class_imvd(C,MethSign,Class,CallerInfo) :-
	candidate_class_imvd(X,MethSign,Class,CallerInfo),
	FLORA_SYMBOL('class')(C),
	X \= C.


/*****************************************************************************
  inheritance book-keeping information for multivalued methods

  Note that the argument "Object" here is considered as an object.
  It is about inheritance from superclasses to instances/members.
*****************************************************************************/
override_object_imvd(C,MethSign,Object,CallerInfo) :-
	WRAP_SUB(X,C,CallerInfo),
	WRAP_ISA(Object,X,CallerInfo),
	X \= C,
	X \= Object,
	FLLOCALPREFIX(WRAP_IMVD)(X,MethSign,CallerInfo).


candidate_object_imvd(C,MethSign,Object,CallerInfo) :-
	var(MethSign),
	!,
	WRAP_ISA(Object,C,CallerInfo),
	FLLOCALPREFIX(WRAP_IMVD)(C,MethSign,CallerInfo),
	C \= Object,
	FLORA_NAF_EXISTS(override_object_imvd(C,MethSign,Object,CallerInfo)).

candidate_object_imvd(C,MethSign,Object,CallerInfo) :-
	FLLOCALPREFIX(WRAP_IMVD)(C,MethSign,CallerInfo),
	WRAP_ISA(Object,C,CallerInfo),
	C \= Object,
	FLORA_NAF_EXISTS(override_object_imvd(C,MethSign,Object,CallerInfo)).


multiple_object_imvd(C,MethSign,Object,CallerInfo) :-
	candidate_object_imvd(X,MethSign,Object,CallerInfo),
	FLORA_SYMBOL('class')(C),
	X \= C.


/*****************************************************************************
  inheritance book-keeping information for boolean tabled methods

  Note that the argument "Class" here is considered as a class.
  It is about inheritance from superclasses to subclasses.
*****************************************************************************/
override_class_imeth(C,MethSign,Class,CallerInfo) :-
	WRAP_SUB(X,C,CallerInfo),
	WRAP_SUB(Class,X,CallerInfo),
	X \= C,
	X \= Class,
	FLLOCALPREFIX(imeth)(X,MethSign,CallerInfo).


candidate_class_imeth(C,MethSign,Class,CallerInfo) :-
	var(MethSign),
	!,
	WRAP_SUB(Class,C,CallerInfo),
	FLLOCALPREFIX(imeth)(C,MethSign,CallerInfo),
	C \= Class,
	FLORA_NAF_EXISTS(override_class_imeth(C,MethSign,Class,CallerInfo)).

candidate_class_imeth(C,MethSign,Class,CallerInfo) :-
	FLLOCALPREFIX(imeth)(C,MethSign,CallerInfo),
	WRAP_SUB(Class,C,CallerInfo),
	C \= Class,
	FLORA_NAF_EXISTS(override_class_imeth(C,MethSign,Class,CallerInfo)).


multiple_class_imeth(C,MethSign,Class,CallerInfo) :-
	candidate_class_imeth(X,MethSign,Class,CallerInfo),
	FLORA_SYMBOL('class')(C),
	X \= C.


/*****************************************************************************
  inheritance book-keeping information for boolean tabled methods

  Note that the argument "Object" here is considered as an object.
  It is about inheritance from superclasses to instances/members.
*****************************************************************************/
override_object_imeth(C,MethSign,Object,CallerInfo) :-
	WRAP_SUB(X,C,CallerInfo),
	WRAP_ISA(Object,X,CallerInfo),
	X \= C,
	X \= Object,
	FLLOCALPREFIX(imeth)(X,MethSign,CallerInfo).


candidate_object_imeth(C,MethSign,Object,CallerInfo) :-
	var(MethSign),
	!,
	WRAP_ISA(Object,C,CallerInfo),
	FLLOCALPREFIX(imeth)(C,MethSign,CallerInfo),
	C \= Object,
	FLORA_NAF_EXISTS(override_object_imeth(C,MethSign,Object,CallerInfo)).

candidate_object_imeth(C,MethSign,Object,CallerInfo) :-
	FLLOCALPREFIX(imeth)(C,MethSign,CallerInfo),
	WRAP_ISA(Object,C,CallerInfo),
	C \= Object,
	FLORA_NAF_EXISTS(override_object_imeth(C,MethSign,Object,CallerInfo)).


multiple_object_imeth(C,MethSign,Object,CallerInfo) :-
	candidate_object_imeth(X,MethSign,Object,CallerInfo),
	FLORA_SYMBOL('class')(C),
	X \= C.

