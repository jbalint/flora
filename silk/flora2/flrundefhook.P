/* File:      flrundefhook.P
**
** Author(s): Guizhen Yang
**            Michael Kifer
**
** Contact:   kifer@cs.stonybrook.edu
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2008.
**
** All rights reserved.
**
** For information about licensing terms, please see
** http://silk.projects.semwebcentral.org/flora2-license.html
**
**
*/




:- compiler_options([xpp_on]).

#include "flora_terms.flh"


/****************************************************************************
  flora_undefined_predicate_hook/1
****************************************************************************/

%% Attempt to call a HiLog term as a predicate
flora_undefined_predicate_hook(WRAP_HILOG,Arity,_PrologModule) :-
	!,
	RealArity is Arity - 1,
	flora_error_line('Attempt to call a HiLog term of arity ~w as a predicate', [RealArity]).

flora_undefined_predicate_hook(WRAP_TABLED_HILOG,Arity,_PrologModule) :-
	!,
	RealArity is Arity - 1,
	flora_error_line('Attempt to call a HiLog term of arity ~w as a predicate', [RealArity]).

flora_undefined_predicate_hook(PRNEG(WRAP_TABLED_HILOG),Arity,_PrologModule) :-
	!,
	RealArity is Arity - 1,
	flora_error_line('Attempt to call a negated HiLog term of arity ~w as a predicate', [RealArity]).

flora_undefined_predicate_hook(WRAP_NONTABLED_HILOG,Arity,_PrologModule) :-
	!,
	RealArity is Arity - 1,
	flora_error_line('Attempt to call a HiLog term of arity ~w as a predicate', [RealArity]).

%% A call to a molecule
flora_undefined_predicate_hook(PredName,Arity,PrologModule) :-
	%% Decode the predicate symbol.
	functor(PCall,PredName,Arity),
	flora_decode_predicate(PCall,PredicateType,ModuleName,_,_PredSymbol,_),
	( (PredicateType == flogic ; PredicateType == neg_flogic) ->
	    %% an F-logic predicate
	    flora_decode_goal_as_atom(PCall,PCallAtom),
	    ( '_isloaded'(ModuleName) ->
		%% This is very unlikely to happen unless something goes wrong.
		flora_error_line('Attempt to call an undefined F-logic molecule of the form ~w in FLORA module `~w''',
			         [PCallAtom, ModuleName])
	    ;
	        flora_error_line('Attempt to call an F-logic molecule of the form ~w in an unloaded FLORA module `~w''',
                                 [PCallAtom, ModuleName])
	    )

	; (PredicateType == (hilog) ; PredicateType == neg_hilog) ->
	    %% a HiLog predicate
	    flora_decode_goal_as_atom(PCall,PCallAtom),
	    %% RealArity is Arity - 2, % extra one for the caller arg
	    ( '_isloaded'(ModuleName) ->
		flora_error_line('Attempt to call an undefined HiLog predicate ~w',
				 [PCallAtom])
		%%flora_error_line('Attempt to call undefined HiLog predicate of arity ~w in FLORA module `~w''', [RealArity,ModuleName])
	    ;
		flora_error_line('A call to a HiLog predicate ~w in an unloaded module `~w''',
				 [PCallAtom,ModuleName])
	        %% flora_error_line('Attempt to call a HiLog predicate of arity ~w in an unloaded FLORA module `~w''', [RealArity,ModuleName])
	    )
	; PredicateType == (prolog) ->
	    flora_error_line('Attempt to call an undefined Prolog predicate ~w/~w in module `~w''',
                               [PredName,Arity,PrologModule])

	).
