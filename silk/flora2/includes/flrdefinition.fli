/************************************************************************
  file: includes/flrdefinition.flh

  Author(s): Guizhen Yang

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2010.

  All rights reserved.

  For information about licensing terms, please see
  http://silk.projects.semwebcentral.org/flora2-license.html

  This file is automatically included by the FLORA-2 compiler.
  This file is for comands that are to be executed once per module.
************************************************************************/


:- compiler_options([spec_off]).

#include "flora_prefix.flh"
#include "flora_wspredicates.flh"
:- WRAP_DUMP  '#include "flora_errors.flh"'.
:- WRAP_COPY_UNQUOTED 'FLORA_THIS_MODULE_NAME'.
:- WRAP_COPY_UNQUOTED 'FLORA_NAF_PREDICATE'.
:- WRAP_COPY_UNQUOTED 'FLORA_THIS_FLD_STORAGE'.
:- WRAP_COPY_UNQUOTED 'FLORA_THIS_FDB_STORAGE'.
:- WRAP_COPY_UNQUOTED 'WARN_TABLED_FLLOAD'.

:- import {}/1 from clpr.

:- import
	flora_db_find_base/2,
        flora_db_delete_all/1,
	flora_new_db_storage/1
   from flrstoragebase.

:- import
	flora_load_dyndata_for_user_modules/1,
	FLORA_SYMBOL('debugger_loaded')/0
   from flrdebugger.
:- import flora_storage_registry/1,
     	  flora_debug_module_registry/1,
	  flora_module_registry/1,
	  flora_in_debug_mode/1
   from flrregistry.

:- import flora_reset_descriptor_meta_predicates/1 from flrdescriptor_support.
:- import flora_warning_line/2 from flrprint.

:- import
       'FLORA_NAF_PREDICATE'/4,
       'FLORA_NAF_PREDICATE'/1
   from flrnegation.
:- import
       flora_abolish_table_call/1,
       flora_abolish_table_call_carefully/1
   from flrtables.

:- import flora_set_counter/2 from flrporting.
:- import flora_error_undefined/1 from flrundefined.
:- import flora_error_notexported/1 from flrundefined.
:- import flora_check_export_registry/3 from flrexport.
:- import flora_reset_export_registries/1 from flrexport.
:- import flora_reset_rule_signature/1 from flrcanon.

:- import flora_delete_all_hooks/1 from flrhooks.


?- flora_db_delete_all('FLORA_THIS_FLD_STORAGE').
?- flora_in_debug_mode(_), !,
      assert(flora_debug_module_registry('FLORA_THIS_MODULE_NAME'))
      ; true.

?- flora_db_delete_all('FLORA_THIS_FDB_STORAGE').
?- (flora_storage_registry('FLORA_THIS_FDB_STORAGE'), !
    ; assert(flora_storage_registry('FLORA_THIS_FDB_STORAGE')),
       assert(flora_fld_storage_registry('FLORA_THIS_FLD_STORAGE'))
    ),
    flora_new_db_storage('FLORA_THIS_FDB_STORAGE').

?- (flora_module_registry('FLORA_THIS_MODULE_NAME') -> true
    ; asserta(flora_module_registry('FLORA_THIS_MODULE_NAME')),
      %% If debugger is loaded, read debugger data for this module
      (current_predicate(flrdebugger:FLORA_SYMBOL('debugger_loaded')/0)
      -> flora_load_dyndata_for_user_modules(['FLORA_THIS_MODULE_NAME'])
      ;  true
      )
   ).

?- flora_reset_descriptor_meta_predicates('FLORA_THIS_MODULE_NAME').

?- flora_reset_export_registries('FLORA_THIS_MODULE_NAME').

?- flora_reset_rule_signature('FLORA_THIS_MODULE_NAME').

?- flora_delete_all_hooks('FLORA_THIS_MODULE_NAME').

/* abolish tables after loading the module */
?- catch(abolish_all_tables, _, flora_warning_line('WARN_TABLED_FLLOAD',['''_load'''])).
?- flrnegation:incr_flora_update_counter.

/***********************************************************************/
