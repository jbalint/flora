/* File:      flora_tabling_methods.flh -- tabling methods for various
**                                         types of predicates
**
** Author(s): Michael Kifer
**
** Contact:   kifer@cs.stonybrook.edu
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2010;
**      and Vulcan, Inc., 2009-2010.
**
** All rights reserved.
**
** For information about licensing terms, please see
** http://silk.projects.semwebcentral.org/flora2-license.html
**
**
*/


/***************************************************************************
       Tabling methods
***************************************************************************/

/*
    If one configures FLORA-2 using

       makeflora -S

    then FLORA_SUBSUMPTIVE_TABLING gets defined in .flora_default_tabling

    With
     
      makeflora -I

    FLORA_INCREMENTAL_TABLING gets defined in .flora_default_tabling

    With

      makeflora -S -I

    both FLORA_SUBSUMPTIVE_TABLING and FLORA_INCREMENTAL_TABLING get defined

    Note: When default tabling changes via makeflora,
          source .flr files must be recompiled.
*/

#include ".flora_default_tabling"

#if defined(FLORA_SUBSUMPTIVE_TABLING) && defined(FLORA_INCREMENTAL_TABLING)

/* Subsumptive tabling yields big speedups and improves termination */
#define MOLECULE_TABLING_TYPE   ','(subsumptive,incremental)
#define HILOG_TABLING_TYPE      ','(subsumptive,incremental)
#define ISA_TABLING_TYPE	','(subsumptive,incremental)
#define EQUALITY_TABLING_TYPE   ','(subsumptive,incremental)
#define AUXILIARY_TABLING_TYPE  ','(subsumptive,incremental)

#endif

#if !defined(FLORA_SUBSUMPTIVE_TABLING) && defined(FLORA_INCREMENTAL_TABLING)

#define MOLECULE_TABLING_TYPE   ','(variant,incremental)
#define HILOG_TABLING_TYPE      ','(variant,incremental)
#define ISA_TABLING_TYPE	','(variant,incremental)
#define EQUALITY_TABLING_TYPE   ','(variant,incremental)
#define AUXILIARY_TABLING_TYPE  ','(variant,incremental)

#endif

#if defined(FLORA_SUBSUMPTIVE_TABLING) && !defined(FLORA_INCREMENTAL_TABLING)

#define MOLECULE_TABLING_TYPE   (subsumptive)
#define HILOG_TABLING_TYPE      (subsumptive)
#define ISA_TABLING_TYPE	(subsumptive)
#define EQUALITY_TABLING_TYPE   (subsumptive)
#define AUXILIARY_TABLING_TYPE  (subsumptive)
/*
#define MOLECULE_TABLING_TYPE   ','(subsumptive,opaque)
#define HILOG_TABLING_TYPE      ','(subsumptive,opaque)
#define ISA_TABLING_TYPE	','(subsumptive,opaque)
#define EQUALITY_TABLING_TYPE   ','(subsumptive,opaque)
#define AUXILIARY_TABLING_TYPE  ','(subsumptive,opaque)
*/

#endif

#if !defined(FLORA_SUBSUMPTIVE_TABLING) && !defined(FLORA_INCREMENTAL_TABLING)

/* Use variant tabling */
/*
#define MOLECULE_TABLING_TYPE   (variant)
#define HILOG_TABLING_TYPE      (variant)
#define ISA_TABLING_TYPE	(variant)
#define EQUALITY_TABLING_TYPE   (variant)
#define AUXILIARY_TABLING_TYPE  (variant)
*/
#define MOLECULE_TABLING_TYPE   ','(variant,opaque)
#define HILOG_TABLING_TYPE      ','(variant,opaque)
#define ISA_TABLING_TYPE	','(variant,opaque)
#define EQUALITY_TABLING_TYPE   ','(variant,opaque)
#define AUXILIARY_TABLING_TYPE  ','(variant,opaque)

#endif


/* defines how dynamic predicates are handled with respect to incrementality */
#if defined(FLORA_INCREMENTAL_TABLING)
#define FLORA_DYNAMICS_TYPE     incremental
#else
#define FLORA_DYNAMICS_TYPE     opaque
#endif


#define FLORA_TABLING_METHODS_INCLUDED
