/* File:      flraggsum.P
**
** Author(s): Guizhen Yang 
**
** Contact:   kifer@cs.stonybrook.edu
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2010.
**
** All rights reserved.
**
** For information about licensing terms, please see
** http://silk.projects.semwebcentral.org/flora2-license.html
**
**
*/


:- compiler_options([xpp_on]).

#include "flora_terms.flh"

:- import member/2 from basics.

:- import flora_warning_line/1 from flrprint.



/*********************************************************************
  fllibsum(+Var,+VarList,+Goal,-Sum)
*********************************************************************/
FLLIBSUM(Var,[],Goal,Sum) :-
	!,
	findall(Var,Goal,Matches),
	flora_sumaux(Matches,Sum).

FLLIBSUM(Var,VarList,Goal,Sum) :-
	ground(VarList),
	!,
	findall(Var,Goal,Matches),
	flora_sumaux(Matches,Sum).

FLLIBSUM(Var,VarList,Goal,Sum) :-
	!,
	findall(flora_result(Var,VarList),Goal,Matches),
	findall(Grp,member(flora_result(_,Grp),Matches),GL),
	sort(GL,Groups),
	member(VarList,Groups),
	findall(D,member(flora_result(D,VarList),Matches),DL),
	flora_sumaux(DL,Sum).


/********************************************************************
  flora_sumaux(+List,-Sum).
  flora_sumaux(+List,-CurrSum,-Sum,-Warning)
********************************************************************/
flora_sumaux(Matches,Sum) :-
	flora_sumaux(Matches,_,Sum,Warning),
	( var(Warning) ->
	    true
	;
	  flora_warning_line("discarding non-numeric objects while computing sum")
	).


flora_sumaux([],X,Sum,_) :-
	!,
	(var(X) -> fail; Sum=X).

flora_sumaux([H|L],X,Sum,Warning) :-
	( number(H) ->
	    (var(X) -> S=H; S is X+H),
	    flora_sumaux(L,S,Sum,Warning)
	  ;
	    Warning=[],
	    flora_sumaux(L,X,Sum,_)
	).
