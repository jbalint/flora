/************************************************************************
  file: includes/flrheader.flh

  Author(s): Guizhen Yang
	     Michael Kifer

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2010.

  All rights reserved.

  For information about licensing terms, please see
  http://silk.projects.semwebcentral.org/flora2-license.html

  This file is automatically included by the FLORA-2 compiler.
************************************************************************/


/************************************************************************
  Note: This file should contain Macros only!

  If FLORA_DUMP is defined: preprocessing for user-friendly output.

  If any of these macros are changed, the corresponding wrappers in
  flrwrapper.P must also be changed
************************************************************************/




/* File:      flora_prefix.flh -- FLORA-2 prefixes
**
** Author(s): Michael Kifer
**	      Guizhen Yang
**
** Contact:   kifer@cs.stonybrook.edu
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2010;
**      and Vulcan, Inc., 2008-2010.
**
** All rights reserved.
**
** For information about licensing terms, please see
** http://silk.projects.semwebcentral.org/flora2-license.html
**
**
*/


/******************************************************************************
  Flora prefix

  All Flora symbols begin with this prefix.
******************************************************************************/
/* for F-logic and HiLog predicates */



/******************************************************************************
  Attaching FLORA_PREFIX

  The argument to this Macro should be quoted.
******************************************************************************/



/******************************************************************************
  Strings following FLORA_PREFIX

  These strings should be quoted.
******************************************************************************/
/* Keep "mod" in the name of a formula wrapper right after FLORA_PREFIX
   We rely on this to identify meta wrappers */



/*  Trie for keeping skeletons of defined facts -- debugging */




/******************************************************************************
  Module and trie prefixes
******************************************************************************/
/* prefix to construct Flora module predicates. */


/*  prefix to name Flora storage trie for a module. */



/* prefix to name Flora fld storage trie for a module. */



/****************************************************************************
  F-logic atom prefixes for predicates that are used to distinguish F-logic
  wrappers in the trailers, the user program, base facts, etc.
****************************************************************************/
















/******************************************************************************
  Lengths of prefixes of F-logic wrappers
******************************************************************************/



/****************************************************************************
  Prefixes that are used for F-logic wrappers in rule bodies of user programs.
  They are called "debuggin prefixes" because they were introduced to help
  implement the debugging feature that catches undefined methods.
****************************************************************************/



/* Prefixes used for checking undefinedness */



/* Corresponding 1-arg macros */

















/******************************************************************************
  Lengths of prefixes that are used in the wrappers to the left of module name

  Note: We need to remember that these prefixes are enclosed in quotes.
        But we need the actual atom length that Prolog uses. So, we deduct 2.
******************************************************************************/



/* length of FLORA_PREFIX'FLORA_MODULE_TAG */













%% support for undefinedness checks


%% used for generating new oids statically












'_$_$_flora''mod''main''tblflapply'('mtVisible','UniversalVocabularyMt',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('mtVisible','BaseKB',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','impPred',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','hlPred',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','not',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','proof',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#arg','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#arith','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#avg','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#binding','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#cancel','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#clause','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#coexclusion','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#collectbag','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#collectset','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#count','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#flora','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#fol','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#hyper','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#id','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#in','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#javaClass','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#max','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#min','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#odbcOpen','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#odbcQuery','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#omni','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#opposes','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#out','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#overrides','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#persistent','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#restWebService','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#sparqlConstruct','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#sparqlQuery','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#strict','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#sum','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#symbolToURI','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#tag','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#type','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk#violation','http://www.cyc.com/silk/implementation/SilkPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','admittedArgument',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','admittedSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','argGenl',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','argIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','argN',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','arity',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','assertedPredicateArg',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','assertedTermSentences',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','assertionDirection',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','backchainForbidden',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','completeExtentAsserted',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','completeExtentKnown',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','conceptuallyRelated',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','conservativeViaArg',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','conservativeViaArgInverse',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','consistent',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','constantGUID',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','constantID',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','constantName',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','denotes',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','different',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','differentSymbols',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','disjointWith',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','elementOf',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','equalStrings-CaseInsensitive',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','equalSymbols',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','equals',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','evaluate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','exactlyAssertedSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','expresses',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','extentCardinality',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','falseSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','formulaArity',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','genlInverse',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','genlMt',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','genlPreds',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','genls',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','greaterThan',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','greaterThanOrEqualTo',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','indexicalReferent',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','integerBetween',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','isa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','ist',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','knownSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','maxQuantValue',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','means',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','minQuantValue',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','myCreationPurpose',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','myCreationSecond',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','myCreationTime',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','myCreator',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','natArgument',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','natArgumentsEqual',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','natFunction',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestCommonGenlMt',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestCommonGenls',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestCommonIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestCommonSpecs',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestDifferentGenls',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestDifferentIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestGenlMt',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestGenlPreds',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestGenls',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nearestIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','negationInverse',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','negationPreds',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nthLargestElement',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','nthSmallestElement',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','operatorFormulas',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','performSubL',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','quantitySubsumes',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','quotedIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','rejectedArgument',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','rejectedSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','relationAllInstance',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','rewriteOf',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','sentenceEquiv',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','sentenceImplies',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','sentenceTruth',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','subsetOf',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','termChosen',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','termExternalIDString',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','termFormulas',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','termOfUnit',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','transitiveViaArg',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','transitiveViaArgInverse',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','trueSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('hlPred','unknownSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/xsbPID',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://vulcan.com/2008/silk-builtins#isInteger',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://vulcan.com/2008/silk-builtins#isFloat',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://vulcan.com/2008/silk-builtins#isString',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://vulcan.com/2008/silk-builtins#isList',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://vulcan.com/2008/silk-builtins#isSymbol',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://vulcan.com/2008/silk-builtins#isURI',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk-builtins#isNumber','http://vulcan.com/2008/silk#ExternalPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''isa'('http://vulcan.com/2008/silk-builtins#isAtom','http://vulcan.com/2008/silk#ExternalPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/isAtomic',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/arg0',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/numberCodes',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/atomCodes',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/xsbWriteLn',[_CallerModuleVar,_CallerModuleArgsVar]).
