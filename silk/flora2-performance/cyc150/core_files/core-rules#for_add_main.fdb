/************************************************************************
  file: includes/flrheader.flh

  Author(s): Guizhen Yang
	     Michael Kifer

  Copyright (C) by
       The Research Foundation of the State University of New York, 1999-2010.

  All rights reserved.

  For information about licensing terms, please see
  http://silk.projects.semwebcentral.org/flora2-license.html

  This file is automatically included by the FLORA-2 compiler.
************************************************************************/


/************************************************************************
  Note: This file should contain Macros only!

  If FLORA_DUMP is defined: preprocessing for user-friendly output.

  If any of these macros are changed, the corresponding wrappers in
  flrwrapper.P must also be changed
************************************************************************/




/* File:      flora_prefix.flh -- FLORA-2 prefixes
**
** Author(s): Michael Kifer
**	      Guizhen Yang
**
** Contact:   kifer@cs.stonybrook.edu
**
** Copyright (C) by
**      The Research Foundation of the State University of New York, 1999-2010;
**      and Vulcan, Inc., 2008-2010.
**
** All rights reserved.
**
** For information about licensing terms, please see
** http://silk.projects.semwebcentral.org/flora2-license.html
**
**
*/


/******************************************************************************
  Flora prefix

  All Flora symbols begin with this prefix.
******************************************************************************/
/* for F-logic and HiLog predicates */



/******************************************************************************
  Attaching FLORA_PREFIX

  The argument to this Macro should be quoted.
******************************************************************************/



/******************************************************************************
  Strings following FLORA_PREFIX

  These strings should be quoted.
******************************************************************************/
/* Keep "mod" in the name of a formula wrapper right after FLORA_PREFIX
   We rely on this to identify meta wrappers */



/*  Trie for keeping skeletons of defined facts -- debugging */




/******************************************************************************
  Module and trie prefixes
******************************************************************************/
/* prefix to construct Flora module predicates. */


/*  prefix to name Flora storage trie for a module. */



/* prefix to name Flora fld storage trie for a module. */



/****************************************************************************
  F-logic atom prefixes for predicates that are used to distinguish F-logic
  wrappers in the trailers, the user program, base facts, etc.
****************************************************************************/
















/******************************************************************************
  Lengths of prefixes of F-logic wrappers
******************************************************************************/



/****************************************************************************
  Prefixes that are used for F-logic wrappers in rule bodies of user programs.
  They are called "debuggin prefixes" because they were introduced to help
  implement the debugging feature that catches undefined methods.
****************************************************************************/



/* Prefixes used for checking undefinedness */



/* Corresponding 1-arg macros */

















/******************************************************************************
  Lengths of prefixes that are used in the wrappers to the left of module name

  Note: We need to remember that these prefixes are enclosed in quotes.
        But we need the actual atom length that Prolog uses. So, we deduct 2.
******************************************************************************/



/* length of FLORA_PREFIX'FLORA_MODULE_TAG */













%% support for undefinedness checks


%% used for generating new oids statically












'_$_$_flora''mod''main''tblflapply'('impPred','istAsserted',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','queryMt',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/directVisible',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','mtVisible',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','assertedSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','lookupSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','forwardSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/destructureFormula',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/isNonAtomic',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','formulaArity',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','operatorFormulas',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','argN',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/listMember',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/setElement',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/listLength',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/listLength',0,[],[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/setCardinality',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/operatorInList',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/digitString',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',0,'_datatype'('_string'('0'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',1,'_datatype'('_string'('1'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',2,'_datatype'('_string'('2'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',3,'_datatype'('_string'('3'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',4,'_datatype'('_string'('4'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',5,'_datatype'('_string'('5'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',6,'_datatype'('_string'('6'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',7,'_datatype'('_string'('7'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',8,'_datatype'('_string'('8'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('http://www.cyc.com/silk/implementation/digitString',9,'_datatype'('_string'('9'),'_string'),[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/toInteger',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','integerBetween',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/directIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/directQuotedIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/directGenls',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/disjointWithLink',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/negationPredsLink',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/negationInverseLink',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/directGenlMt',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/indirectIsa',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/indirectGenls',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/quotedDefnAdmits',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/defnAdmits',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','quotedDefnSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','defnSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/isAtomicSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/wffRejectedArgument',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/wffAdmittedArgument',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/wffRejectedSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/wffAdmittedSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','gpLookupSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/transitivityLink',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/transitivityWalk1to2',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/transitivityWalk2to1',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/transitivityFanoutArg',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','transitivitySentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/decidableAsent',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/tvaPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','tvaSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/evaluatableFunction',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/evaluatablePredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/evaluateTerm',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/evaluateSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/removalPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','removalSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','http://www.cyc.com/silk/implementation/transformationPredicate',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','backwardSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
'_$_$_flora''mod''main''tblflapply'('impPred','transformationSentence',[_CallerModuleVar,_CallerModuleArgsVar]).
