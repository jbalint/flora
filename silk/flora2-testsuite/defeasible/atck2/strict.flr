:- use_argumentation_theory{ogcle}.
?- [atck2>>ogcle].

p(a) :- true.
@{tt} neg p(a).

@{tt1} q.
@{tt2} neg q.

@{tt3} r.

@{tt3} rr.

_opposes(p(a),rr).

%tst1 :- write('test1: q is false - ')@_plg,
	 if not q then writeln(succeeded)@_plg
         else writeln(failed)@_plg.
%tst2 :- write('test2: r is true - ')@_plg,
	 if r then writeln(succeeded)@_plg
         else writeln(failed)@_plg.
%tst3 :- write('test3: rr is false - ')@_plg,
	 if not rr then writeln(succeeded)@_plg
         else writeln(failed)@_plg.
%tst4 :- write('test4: p(a) is true - ')@_plg,
	 if p(a) then writeln(succeeded)@_plg
         else writeln(failed)@_plg.
%tst5 :- write('test5: neg p(a) is false - ')@_plg,
	 if not neg p(a) then writeln(succeeded)@_plg
         else writeln(failed)@_plg.

%pretest :- %tst1, %tst2, %tst3, %tst4, %tst5.

%test :- tell(temp)@_plg(),
	Method[%mustDefine(on)]@_sys,
	%pretest,
	Method[%mustDefine(off)]@_sys,
	abolish_all_tables,
	%pretest,
	told@_plg.
