
// Agent that can do Modus Ponens

john[believes-> ${p(a)}].
john[believes-> ${q(?X) :- p(?X)}].

john[believes-> ${bob[likes->?X] :- mary[likes->?X]}].
john[believes-> ${mary[likes->sally]}].

john[believes-> ?A] :-
	// block john[believes-> ${A :- B}] from matching the head of this rule
	if (nonvar(?A), ?A = ${?_H :- ?_B}) then fail,
	john[believes-> ${?A :- ?B}]
        and john[believes-> ?B].


%tst1 :-
	john[believes->?X], write('test1: ')@_plg(),
	numbervars(?X)@_plg(num_vars),
	flora_write_goal(?X)@_plg(flrdecode), nl@_plg(), fail.
%tst1 :- true.

%pretest :- %tst1.

%test :- tell(temp)@_plg(),
	Method[%mustDefine(on)]@_sys,
	%pretest,
	Method[%mustDefine(off)]@_sys,
	abolish_all_tables,
	%pretest,
	told@_plg.
