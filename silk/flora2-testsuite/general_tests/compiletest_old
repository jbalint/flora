
++Error[FLORA]> [compile_control.flr] <Parser> near line(15)/char(61) `then'
                unexpected then-statement
++Error[FLORA]> [compile_control.flr] <Parser> near line(16)/char(21) `then'
                unexpected then-statement
++Error[FLORA]> [compile_control.flr] <Parser> near line(17)/char(14) `then'
                invalid then-statement
++Error[FLORA]> [compile_control.flr] <Parser> near line(18)/char(10) `then'
                invalid then-statement
++Error[FLORA]> [compile_control.flr] <Parser> near line(21)/char(14) `if'
                insertion into built-in predicates or attributes is illegal
++Error[FLORA]> [compile_control.flr] <Parser> near line(29)/char(1) `do'
                redefinition of a built-in in rule head
++Error[FLORA]> [compile_control.flr] <Parser> near line(30)/char(1) `until'
                redefinition of a built-in in rule head
++Error[FLORA]> [compile_control.flr] <Parser> near line(32)/char(1) `while'
                redefinition of a built-in in rule head
++Error[FLORA]> [compile_control.flr] <Parser> near line(33)/char(1) `loop'
                redefinition of a built-in in rule head
++Error[FLORA]> [compile_control.flr] <Parser> near line(34)/char(1) `unless'
                redefinition of a built-in in rule head
++Error[FLORA]> [compile_control.flr] <Parser> near line(36)/char(11) `neg'
                NEG in an update statement cannot negate conjunction
++Error[FLORA]> [compile_control.flr] <Compiler> near line(38)/char(30) `k'
                aggregate variable not in aggregate body

++12 errors

++compilation aborted

++Warning[FLORA]> [compile_control.flr] <Compiler> near line(6)/char(11) `Begin'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(6)/char(23) `End'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(10) `L'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(18) `Len'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(32) `Lx'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(13) `Off'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(10) `L'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(13) `Off'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(18) `Len'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(5)/char(32) `Lx'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(9)/char(11) `L'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(9)/char(24) `L1'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(8)/char(2) `O'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(8)/char(2) `O'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(11)/char(2) `O'
                  singleton variable
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(11)/char(2) `O'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [compile_control.flr] <Compiler> near line(31)/char(8) `b'
                  nontransactional symbol was previously used as transactional

++17 warnings

