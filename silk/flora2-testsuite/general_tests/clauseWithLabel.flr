
?- newmodule{w}.

@{aa1,mm1,mm2} p1 :- q1.
@{mm2[b->c]} p2 :- q2.
p3 :- q3.

@{"fooo"^^string} Top[val=>mooo].
@{"ed"^^_string} Top[val*=>boo].
@{"ed"^^_string} Top[val*->string].

?- insertrule{(@{aa_dyn1,mm_dyn1,mm_dyn2} p_dyn1 :- q_dyn1),
	       (@{qqq,mm2[b->c,c->p]} p_dyn2 :- q_dyn2),
	       (p_dyn3 :- q_dyn3)}.

?- 	
	insertrule{@{_#1,foo} neg rr[d(_#1)] :- rr, qq},
	insertrule{neg e[f->?X] :- p(?X)},
	insertrule{((neg ppp(?X) :- p(?X)),
	             (@{_#1,foo} neg qqq(_#1,?X) :- rrr(?X))@w,
		     (@{aaa3,foo} neg pppp :- rr))@w}.
?- insertrule{(neg c[d] :- h, qq)@w},
	insertrule_a{(@{_#1,foo}tc(?X,?Y) :- %e(?X,?Y)@_@)@w},
	insertrule_a{(tc(?X,?Y) :- tc(?X,?Z),%e(?Z,?Y)@_@)@w}.

@{aaa5,mm2[b->d]} neg aaa(a) :- neg bbb(b),c.
@{aaa6,mm2[b->d,c->{e,d}],p(aa)} eee(a) :- neg bbb,c(d,k).

%tst1 :- 
        write('tst1: ')@_plg(),
	?Res = collectset{?O| clause{@{?Id,foo}?P,(?L,qq)},
	                      ?O = out(?Id,?P,?L)
	                 },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst2 :- 
        write('tst2: ')@_plg(),
	?Res = collectset{?O| clause{@{aaa6,?,?[c->?X],?Y}?P,?L},
	                      ?O = out(?X,?Y,?P,?L)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst3 :-
        write('tst3: ')@_plg(),
	?Res = collectset{?O| clause{@{?Id,?,?[c->?X],?Y}?P,?L},
	                      ?O = out(?Id,?X,?Y,?P,?L)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst4 :- // ?Y@ _@ matches only a singleton goals.
        write('tst4: ')@_plg(),
	?Res = collectset{?O| clause{@{?}?X,?Y@ _@},
	                      ?O = out(?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst5 :-
        write('tst5: ')@_plg(),
	?Res = collectset{?O| clause{@{?,?M}tc(?,?)@w,?Y},
	                      ?O = out(?M,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst6 :- // ?Y@w matches only singlton goals.
        write('tst6: ')@_plg(),
	?Res = collectset{?O| clause{@{?,?M1,?M2}?X,?Y@w},
	                      ?O = out(?M1,?M2,?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst7 :-
        write('tst7: ')@_plg(),
	?Res = collectset{?O| clause{@{?,?M1,?}?X,%?Y},
	                      ?O = out(?M1,?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst8 :-
        write('tst8: ')@_plg(),
	?Res = collectset{?O| clause{@{?,?M1[?->?]}?X,?Y},
	                      ?O = out(?M1,?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst9 :-
        write('tst9: ')@_plg(),
	?Res = collectset{?O| clause{@{?,mm1,?}?X,?Y},
	                      ?O = out(?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst10 :-
        write('tst10: ')@_plg(),
	?Res = collectset{?O| clause{@{?,mm1}?X,?Y},
	                      ?O = out(?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst11 :-
        write('tst11: ')@_plg(),
	?Res = collectset{?O| clause{@{?,?,mm2}?X,?Y},
	                      ?O = out(?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst12 :-
        write('tst12: ')@_plg(),
	?Res = collectset{?O| clause{@{?,mm1,mm2}?X,?Y},
	                      ?O = out(?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.
%tst13 :-
        write('tst13: ')@_plg(),
	?Res = collectset{?O| clause{?X@w,?Y},
	                      ?O = out(?X,?Y)
                         },
	numbervars(?Res)@_plg(num_vars),
	flora_write_goal(?Res)@_plg(flrdecode), nl@_plg.

%tst14 :-
        write('tst14: ')@_plg(),
	clause{@{?X} Top[?*=>?V],?B},
	flora_write_goal((?X,?V,?B))@_plg(flrdecode), nl@_plg.

%tst15 :-
        write('tst15: ')@_plg(),
	clause{@{?X} Top[?=>mooo],?B},
	flora_write_goal((?X,?B))@_plg(flrdecode), nl@_plg.

%tst16 :-
        write('tst16: ')@_plg(),
	clause{@{?X} Top[val*->string],?B},
	flora_write_goal((?X,?B))@_plg(flrdecode), nl@_plg.


%pretest :-
	%tst1, %tst2, %tst3, %tst4, %tst5, %tst6, %tst7, %tst8, %tst9, %tst10,
	%tst11, %tst12, %tst13, %tst14, %tst15, %tst16.

%test :- tell(temp)@_plg(),
        Method[%mustDefine(on)]@_sys,
        %pretest,
        Method[%mustDefine(off)]@_sys,
        %pretest,
        told@_plg().


