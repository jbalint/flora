
%tst1 :- write('tst1: ')@_plg(), insert{p(${a@main})}, ?X= ${q(${a@main})}, insert{?X}, flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

%tst2 :- write('tst2: ')@_plg(), p(?X),
	write('x=')@_plg(),
	flora_write_goal(?X)@_plg(flrdecode),
	q(?Y),
	write(' y=')@_plg(), flora_write_goal(?Y)@_plg(flrdecode),
	nl@_plg().

%tst3 :- write('tst3: ')@_plg(), ?X= ${a@main}, q(?Y), ?X = ?Y, flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

%tst4 :- write('tst4: ')@_plg(), ?X= ${a@main}, p(?Y), ?X = ?Y,
	flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

%tst5 :- write('tst5: ')@_plg(), ?Y=a, ?Z=main, ?X = ${pp(${?Y@?Z})}, insert{?X},
	flora_write_goal(?X)@_plg(flrdecode), nl@_plg().
%tst6 :- write('tst6: ')@_plg(), pp(?X),
	flora_write_goal(?X)@_plg(flrdecode), nl@_plg(), ?X = ${a@main}.

%tst7 :- write('tst7: ')@_plg(), ?Y=a, ?Z=main, insert{qq(${?Y@?Z})},
	writeln(' done')@_plg().
%tst8 :- write('tst8: ')@_plg(), qq(?X),
	flora_write_goal(?X)@_plg(flrdecode), nl@_plg(), ?X = ${a@main}.

%tst9 :- write('tst9: ')@_plg(), insert{p[${a@main}]}, ?X= ${q[${a@main}]},
	insert{?X},
	flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

%tst10 :- write('tst10: ')@_plg(), p[?X],
	 write('x=')@_plg(),
	 flora_write_goal(?X)@_plg(flrdecode),
	 q[?Y],
	 write(' y=')@_plg(), flora_write_goal(?Y)@_plg(flrdecode),
	 nl@_plg().

%tst11 :- write('tst11: ')@_plg(), ?X= ${a@main}, q[?Y], ?X = ?Y,
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

%tst12 :- write('tst12: ')@_plg(), ?X= ${a@main}, p[?Y], ?X = ?Y,
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

%tst13 :- write('tst13: ')@_plg(), ?Y=a(), ?Z=main, ?X = ${pp[${?Y@?Z}]}, insert{?X},
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg().
%tst14 :- write('tst14: ')@_plg(), pp[?X],
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg(), ?X = ${a@main}.

%tst15 :- write('tst15: ')@_plg(), ?Y=a(), ?Z=main,insert{qq[${?Y@?Z}]},
	 writeln(' done')@_plg().
%tst16 :- write('tst16: ')@_plg(), qq[?X],
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg(), ?X = ${a@main}.

%tst17 :- write('tst17: ')@_plg(),
	 insert{ppp(${a[c->d]@main})}, ?X= ${qqq(${a[c->d]@main})}, insert{?X},
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

// X is encoded as head, while Y as body - no good
%tst18 :- write('tst18: ')@_plg(), ppp(?X),
	 write('x=')@_plg(),
	 flora_write_goal(?X)@_plg(flrdecode),
	 qqq(?Y),
	 write(' y=')@_plg(), flora_write_goal(?Y)@_plg(flrdecode),
	 nl@_plg().

%tst19 :- write('tst19: ')@_plg(), ?X= ${a[c->d]@main}, qqq(?Y), ?X = ?Y,
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg().

// Should succeed but fails
%tst20 :- write('tst20: ')@_plg(), ?X= ${a[c->d]@main}, ppp(?Y),
	 write('x=')@_plg(),
	 flora_write_goal(?X)@_plg(flrdecode),
	 write(' y=')@_plg(),
	 flora_write_goal(?Y)@_plg(flrdecode),
	 ?X = ?Y,
	 writeln(' done')@_plg().

%tst21 :- write('tst21: ')@_plg(), ?Y= a, ?Z=main, ?X = ${pppp(${?Y[c->d]@?Z})},
	 insert{?X},
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg().
%tst22 :- write('tst22: ')@_plg(), pppp(?X),
	 flora_write_goal(?X)@_plg(flrdecode), nl@_plg(),
	 ?X = ${a[c->d]@main}.

%tst23 :- write('tst23: ')@_plg(), ?Y= a, ?Z=main, insert{qqqq(${?Y[c->d]@?Z})},
	 writeln(' done')@_plg().
// should succeed but fails because X is encoded as head while Y as body
%tst24 :- write('tst24: ')@_plg(), qqqq(?X),
	 write('x=')@_plg(),
	 flora_write_goal(?X)@_plg(flrdecode),
	 ?Y = ${a[c->d]@main},
	 write(' y=')@_plg(),
	 flora_write_goal(?Y)@_plg(flrdecode),
	 ?X=?Y, writeln(' done')@_plg().


// Should succeed
%tst25 :- write('tst25: ')@_plg(), ?X=main, ?Y = ${aa[g->h]},
	insert{aa[c->d]@main, aa[e->f]@?X, ?Y},
	aa[c->d], aa[e->f], aa[g->h],
	writeln(' done')@_plg().

%pretest :- %tst1, %tst2, %tst3, %tst4, %tst5, %tst6, %tst7, %tst8, %tst9,
	   %tst10, %tst11, %tst12, %tst13, %tst14, %tst15, %tst16, %tst17,
	   %tst18, %tst19, %tst20, %tst21, %tst22, %tst23, %tst24, %tst25.

%test :- tell(temp)@_plg(), 
	%pretest,
	Method[%mustDefine(on)]@_sys,
	%pretest,
	Method[%mustDefine(off)]@_sys,
	told@_plg().


