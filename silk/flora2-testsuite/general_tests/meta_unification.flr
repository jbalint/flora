%tst1 :- unless a(b) ~ ?_X@foo
        do writeln('tst1 failed as expected')@_plg().
%tst1_2 :- unless %a(b) ~ %?_X@foo
        do writeln('tst1_2 failed as expected')@_plg().
%tst2 :- a(b)@foo ~ ?X@foo, ?Y = foo, a(b)@?Y ~ ?X@foo, ?Z=a(b), ?Z@?Y ~ ?X@foo,
	a(b)@foo ~ ?XX@?YY,
	write('tst2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?XX,?YY))@_plg(flrdecode), nl@_plg().
%tst2_2 :- %a(b)@foo ~ %?X@foo, ?Y = foo, %a(b)@?Y ~ %?X@foo, ?Z=a(b), %?Z@?Y ~ %?X@foo,
	%a(b)@foo ~ %?XX@?YY,
	write('tst2_2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?XX,?YY))@_plg(flrdecode), nl@_plg().
%tst3 :- ?_X@?M ~ ?Y@foo, ?Z@foo ~ ?V@?N, ?Z=a, ?Y=a(b),
	write('tst3 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(${?_X@?M}, ${?V@?N}))@_plg(flrdecode), nl@_plg().
%tst3_2 :- %?_X@?M ~  %?Y@foo, %?Z@foo ~ %?V@?N, ?Z=a, ?Y=a(b),
	write('tst3_2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(${%?_X@?M}, ${%?V@?N}))@_plg(flrdecode), nl@_plg().
%tst4 :- unless a(b)@foo ~ ?_X@bar do writeln('tst4 failed as expected')@_plg().
%tst4_2 :- unless %a(b)@foo ~ %?_X@bar do writeln('tst4_2 failed as expected')@_plg().
%tst5 :- a(b)@?M ~ ?X@bar, ?Y@bar ~ a(b)@?MM,
	write('tst5 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?M,?Y,?MM))@_plg(flrdecode), nl@_plg().
%tst5_2 :- %a(b)@?M ~ %?X@bar, %?Y@bar ~ %a(b)@?MM,
	write('tst5_2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?M,?Y,?MM))@_plg(flrdecode), nl@_plg().
%tst6 :- ?X@?M ~ ?Y@foo, ?Y=a(b), ?X@?M~a(b)@foo,
	write('tst6 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(${?X@?M},?Y))@_plg(flrdecode), nl@_plg().
%tst6_2 :- %?X@?M ~ %?Y@foo, ?Y=a(b), %?X@?M~ %a(b)@foo,
	write('tst6_2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(${%?X@?M}))@_plg(flrdecode), nl@_plg().
%tst7 :- ?X@?M ~ ?Y@foo, ?Y=a(b), ?Y@?Z ~a(b)@?W, ?W=bar,
	write('tst7 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(${?X@?M},?Y,?Z,?W))@_plg(flrdecode), nl@_plg().
%tst7_2 :- %?X@?M ~ %?Y@foo, ?Y=a(b), %?Y@?Z ~ %a(b)@?W, ?W=bar,
	write('tst7_2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(${%?X@?M},?Y,?Z,?W))@_plg(flrdecode), nl@_plg().
%tst8 :- a(b)@?X ~ ?Y@foo, ?Y@?Z ~a(b)@?W, ?Z=pp,
	write('tst8 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?Y,?W))@_plg(flrdecode), nl@_plg().
%tst8_2 :- %a(b)@?X ~ %?Y@foo, %?Y@?Z ~ %a(b)@?W, ?Z=pp,
	write('tst8_2 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?Y,?W))@_plg(flrdecode), nl@_plg().
%tst9 :- unless (a(b)@?_X ~ ?Y@foo, ?Y@?_Z ~a(b)@pp) 
	 do writeln('tst9 failed as expected')@_plg().
%tst9_2 :- unless (%a(b)@?_X ~ %?Y@foo, %?Y@?_Z ~ %a(b)@pp) 
	 do writeln('tst9_2 failed as expected')@_plg().
%tst10 :- a[b->?C]@foo ~ ?X@?Z, ?X ~ ${?A[?B->cc]@foo},
	write('tst10 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?Z,?A,?B,?C))@_plg(flrdecode), nl@_plg().
%tst11 :- a[b->?C]@?M ~ ?X@?Z, ?X@?_N~ ?A[?B->cc]@foo,
	write('tst11 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?Z,?M,?A,?B,?C))@_plg(flrdecode), nl@_plg().

%tst12 :- a(?X)@?_M ~ ?Y@?Z, ?X=dd, ?Z = ff, ?XX@?YY ~ a[b->cc]@foo,
	write('tst12 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?Y,?Z,?XX,?YY))@_plg(flrdecode), nl@_plg().

%tst13 :- insert{p(${a[b->c]})}, p(?X), ?X@?Y ~ a[b->c]@?Z, ?Y=pp,
	write('tst13 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?Y,?Z))@_plg(flrdecode), nl@_plg().

%tst14 :- ?X ~ a[b->c,e->d]@foo, ?M=foo, ?X@?M ~ a[b->c,e->d]@?M,
	write('tst14 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?M))@_plg(flrdecode), nl@_plg().

%tst15 :- ?X ~ a[b->c,e->d]@foo, ?M=foo, ?X@?M ~ a[b->c,e->d]@foo,
	write('tst15 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?M))@_plg(flrdecode), nl@_plg().

%tst16 :- ?X ~ a[b->c;e->d]@foo, ?M=foo, ?X@?M ~ a[b->c;e->d]@?M,
	write('tst16 succeeded, as expected = ')@_plg(),
	flora_write_goal(ans(?X,?M))@_plg(flrdecode), nl@_plg().

%pretest :- %tst1,%tst2,%tst3,%tst4,%tst5,%tst6,%tst7,%tst8,%tst9,%tst10,%tst11,%tst12,
	%tst13,%tst14,%tst15,%tst16,
        %tst1_2,%tst2_2,%tst3_2,%tst4_2,%tst5_2,%tst6_2,%tst7_2,%tst8_2,%tst9_2.

%test :- tell(temp)@_plg(), 
	%pretest,
	Method[%mustDefine(on)]@_sys,
	%pretest,
	told@_plg().



