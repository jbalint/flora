
#include "flora_exceptions.flh"

%tst1 :- write('tst1: ')@_plg(),
	?W= ${(a:- b,c)@foo},
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().
%tst2 :- write('tst2: ')@_plg(),
	?W= ${(a:- b,c)@foo, (f(?X):-e(?X),k(?X,?_V))@foo },
	?X = 'X', ?_V = '_V',
	//numbervars(?W)@_plg(num_vars),
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().
%tst3 :- write('tst3: ')@_plg(),
	?W= ${(a:-b,c), (f(?X):-e(?X),k(?X,?_V))},
	?X = 'X', ?_V = '_V',
	//numbervars(?W)@_plg(num_vars),
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().
%tst4 :- write('tst4: ')@_plg(),
	?W = ${ a, (a :- b,c) , d},
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().
%tst5 :- write('tst5: ')@_plg(),
	?W = ${ a, (a :- b,c)@foo , d},
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().

%tst6 :- write('tst6: ')@_plg(),
	?W= ${(a:- b,c)@ _@, ((c:-d), (e:-fff))@foo},
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().
%tst7 :- write('tst7: ')@_plg(),
	?W= ${(a:- b,c)@ _@, ((c:-d), (e:-fff))},
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().

%tst8 :- write('tst8: ')@_plg(),
	?W= ${a:- b,c},
	flora_write_goal('W'=?W)@_plg(flrdecode),
	 nl@_plg().
%tst9 :- write('tst9: ')@_plg(),
	insertrule{(a:- b,c)}, insert{b,c},
	if a then writeln(success)@_plg() else writeln(failure)@_plg().
%tst10 :-
	if \+ _isloaded(foo10) then newmodule{foo10},
	insertrule{(a10:- b10,c10)@ _@, ((c10 :-d10 ), (e10 :-fff10 ))@foo10},
	insert{b10,c10, d10@foo10, fff10@foo10},
	write('tst10: ')@_plg(),
	if (a10@ _@, (c10, e10)@foo10)
        then writeln(success)@_plg()
        else writeln(failure)@_plg().
%tst11 :- write('tst11: ')@_plg(),
	insertrule{(a11 :- b11, c11 )@ _@, (f11 :-d11), (e11 :-fff11)},
	insert{b11,c11,d11,fff11},
	if (a11, f11, e11)
        then writeln(success)@_plg()
        else writeln(failure)@_plg().

%tst12 :- write('tst12: ')@_plg(),
	?X= ${a12:-b12}, insertrule{?X}, insert{b12},
	if a12
        then writeln(success)@_plg()
        else writeln(failure)@_plg().

%tst13 :-
	if \+ _isloaded(foo13) then newmodule{foo13},
	?W= ${(a13:- b13,c13)@foo13}, insertrule{?W}, insert{(b13,c13)@foo13},
	!,
	write('tst13: ')@_plg(),
	if a13@foo13
        then writeln(success)@_plg()
        else writeln(failure)@_plg().

%tst14 :- if \+ _isloaded(foo14) then newmodule{foo14},
	?W= ${(a14:- b14,c14)@foo14, (f14(?X):-e14(?X),k14(?X,?_))@foo14 },
	insertrule{?W}, insert{(b14,c14)@foo14, (e14(a), k14(a,b))@foo14},
	!,
	write('tst14: ')@_plg(),
	if (a14, f14(a))@foo14
        then writeln(success)@_plg()
        else writeln(failure)@_plg().



%tst15 :-
	?W = ${ a, (a :- b,c) , d},
	write('tst15: ')@_plg(),
	catch{insertrule{?W},FLORA_ABORT(?X,?_),writeln(?X)@_plg()}.

%tst16 :-
	?W = ${ a, (a :- b,c)@foo , d},
	write('tst16: ')@_plg(),
	catch{insertrule{?W},FLORA_ABORT(?X,?_),writeln(?X)@_plg()}.

%tst17 :- ?W= ${(a17:- b17,c17)@ _@,
	       ((c17:-d17),(e17:-fff17))@foo17,
	       ((f17:-d17), (e17:-fff17))},
	 if \+ _isloaded(foo17) then newmodule{foo17},
	 insertrule{?W}, insert{b17,c17,(d17,fff17)@foo17, (d17,fff17)},
	 !,
	 write('tst17: ')@_plg(),
	 if (a17, f17, e17, (c17,e17)@foo17)
         then writeln(success)@_plg()
         else writeln(failure)@_plg().


%tst18 :- (a,b :- c,d) ~ (?_X:-?_Y),
	 write('tst18: ')@_plg(),
	 flora_write_goal('X'=?_X)@_plg(flrdecode),
	 flora_write_goal(' Y'=?_Y)@_plg(flrdecode),
	 nl@_plg().


%tst19 :- ${ a:-b(?_Y)} ~ ${a:-?_X},
	 //numbervars(?_X)@_plg(num_vars),
	?_Y = '_Y',
	 write('tst19: ')@_plg(),
	 flora_write_goal('X'=?_X)@_plg(flrdecode),
	 nl@_plg().

%tst20 :- ?A ~ ${p(p) :- p(k)}, ?_X=p(p), ?_Y=p(k),
	 write('tst20: ')@_plg(),
	 flora_write_goal('A'=?A)@_plg(flrdecode),
	 nl@_plg().

%tst21 :- ?A ~ ${?X :- ?Y}, ?X=p(p), ?Y=p(k),
	 write('tst21: ')@_plg(),
	 flora_write_goal('A'=?A)@_plg(flrdecode),
	 nl@_plg().

%tst22 :- ${(a:-b)@foo} ~ ${(a:-b)@?_X},
	 write('tst22: ')@_plg(),
	 writeln(?_X)@_plg().

%tst23 :- ${(a:-b)@foo} ~ ${(a:-?_Y)@?_X},
	 write('tst23: ')@_plg(),
	 write(x=?_X)@_plg(),
	 flora_write_goal(' Y'=?_Y)@_plg(flrdecode),
	 nl@_plg().

%tst24 :- ${(a,?_A:-b)@foo} ~ ${(?_B,b :-?_Y)@?_X},
	 write('tst24: ')@_plg(),
	 flora_write_goal('A'=?_A)@_plg(flrdecode),
	 flora_write_goal(' B'=?_B)@_plg(flrdecode),
	 flora_write_goal(' Y'=?_Y)@_plg(flrdecode),
	 writeln(?_X)@_plg().

%pretest :-
	%tst1, %tst2, %tst3, %tst4, %tst5, %tst6, %tst7, %tst8, %tst9,
	%tst10, %tst11, %tst12, %tst13, %tst14, %tst15, %tst16, %tst17,
	%tst18, %tst19, %tst20, %tst21, %tst22, %tst23, %tst24.

%test :- tell(temp)@_plg(),
	%pretest,
	Method[%mustDefine(on)]@_sys,
	%pretest,
	Method[%mustDefine(off)]@_sys,
	told@_plg().



