Original XSB Logfile: terminyzer2_log_xsb.P

Unfinished-call analysis logfile: terminyzer2_log_xsb_callcmp.P

----unfinishedcall analysis summary----
Graph nodes are in the format of node[nodeid->Id,subgoal->Subgoal,module->Module,ruleid->RuleId,type->GraphType]
  node[nodeid->1, subgoal->null, module->?_h76368, ruleid->?_h76386, type->unfinishedcall]
  node[nodeid->2, subgoal->${path1[?_h76789 -> ?_h76795]}, module->main, ruleid->?_h76948, type->unfinishedcall]
  node[nodeid->3, subgoal->${path2[?_h77412 -> f1(?_h77422)]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->4, subgoal->${path1[?_h78122 -> f2(f1(?_h78136))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->5, subgoal->${path2[?_h78901 -> f1(f2(f1(?_h78919)))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->6, subgoal->${path1[?_h79749 -> f2(f1(f2(f1(?_h79771))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->7, subgoal->${path2[?_h80666 -> f1(f2(f1(f2(f1(?_h80692)))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->8, subgoal->${path1[?_h81652 -> f2(f1(f2(f1(f2(f1(?_h81682))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->9, subgoal->${path2[?_h82707 -> f1(f2(f1(f2(f1(f2(f1(?_h82741)))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->10, subgoal->${path1[?_h83831 -> f2(f1(f2(f1(f2(f1(f2(f1(?_h83869))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->11, subgoal->${path2[?_h85024 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h85066)))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->12, subgoal->${path1[?_h86286 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h86332))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->13, subgoal->${path2[?_h87617 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h87667)))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->14, subgoal->${path1[?_h89017 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h89071))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->15, subgoal->${path2[?_h90486 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h90544)))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->16, subgoal->${path1[?_h92024 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h92086))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->17, subgoal->${path2[?_h93631 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h93697)))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->18, subgoal->${path1[?_h95307 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h95377))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->19, subgoal->${path2[?_h97052 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h97126)))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->20, subgoal->${path1[?_h98866 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h98944))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->21, subgoal->${path2[?_h100749 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h100831)))))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->22, subgoal->${path1[?_h102701 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h102787))))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->23, subgoal->${path2[?_h104722 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h104812)))))))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->24, subgoal->${path1[?_h106812 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h106906))))))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->25, subgoal->${path2[?_h108971 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h109069)))))))))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->26, subgoal->${path1[?_h111199 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h111301))))))))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->27, subgoal->${path2[?_h113496 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h113602)))))))))))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->28, subgoal->${path1[?_h115862 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h115972))))))))))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->29, subgoal->${path2[?_h118297 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h118411)))))))))))))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->30, subgoal->${path1[?_h120801 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h120919))))))))))))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
  node[nodeid->31, subgoal->${path2[?_h123374 -> f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h123496)))))))))))))))))))))))))))))]}, module->main, ruleid->rule3, type->unfinishedcall]
  node[nodeid->32, subgoal->${path1[?_h126016 -> f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(f2(f1(?_h126142))))))))))))))))))))))))))))))]}, module->main, ruleid->rule4, type->unfinishedcall]
Number of nodes: 32

Edges are in the format of edge[edgeid->EdgeId, parent->ParentSubgoalNodeId, child->ChildSubgoalNodeId, rule->RuleId, type->GraphType]
Edge Ids for answer-flow graph are the corresponding unfinished call graph edge Ids
  edge[edgeid->1, parent->2, child->3, rule->rule3, type->unfinishedcall]
  edge[edgeid->2, parent->3, child->4, rule->rule4, type->unfinishedcall]
  edge[edgeid->3, parent->4, child->5, rule->rule3, type->unfinishedcall]
  edge[edgeid->4, parent->5, child->6, rule->rule4, type->unfinishedcall]
  edge[edgeid->5, parent->6, child->7, rule->rule3, type->unfinishedcall]
  edge[edgeid->6, parent->7, child->8, rule->rule4, type->unfinishedcall]
  edge[edgeid->7, parent->8, child->9, rule->rule3, type->unfinishedcall]
  edge[edgeid->8, parent->9, child->10, rule->rule4, type->unfinishedcall]
  edge[edgeid->9, parent->10, child->11, rule->rule3, type->unfinishedcall]
  edge[edgeid->10, parent->11, child->12, rule->rule4, type->unfinishedcall]
  edge[edgeid->11, parent->12, child->13, rule->rule3, type->unfinishedcall]
  edge[edgeid->12, parent->13, child->14, rule->rule4, type->unfinishedcall]
  edge[edgeid->13, parent->14, child->15, rule->rule3, type->unfinishedcall]
  edge[edgeid->14, parent->15, child->16, rule->rule4, type->unfinishedcall]
  edge[edgeid->15, parent->16, child->17, rule->rule3, type->unfinishedcall]
  edge[edgeid->16, parent->17, child->18, rule->rule4, type->unfinishedcall]
  edge[edgeid->17, parent->18, child->19, rule->rule3, type->unfinishedcall]
  edge[edgeid->18, parent->19, child->20, rule->rule4, type->unfinishedcall]
  edge[edgeid->19, parent->20, child->21, rule->rule3, type->unfinishedcall]
  edge[edgeid->20, parent->21, child->22, rule->rule4, type->unfinishedcall]
  edge[edgeid->21, parent->22, child->23, rule->rule3, type->unfinishedcall]
  edge[edgeid->22, parent->23, child->24, rule->rule4, type->unfinishedcall]
  edge[edgeid->23, parent->24, child->25, rule->rule3, type->unfinishedcall]
  edge[edgeid->24, parent->25, child->26, rule->rule4, type->unfinishedcall]
  edge[edgeid->25, parent->26, child->27, rule->rule3, type->unfinishedcall]
  edge[edgeid->26, parent->27, child->28, rule->rule4, type->unfinishedcall]
  edge[edgeid->27, parent->28, child->29, rule->rule3, type->unfinishedcall]
  edge[edgeid->28, parent->29, child->30, rule->rule4, type->unfinishedcall]
  edge[edgeid->29, parent->30, child->31, rule->rule3, type->unfinishedcall]
  edge[edgeid->30, parent->31, child->32, rule->rule4, type->unfinishedcall]
Number of edges: 30

Loops are in the format of loop[loopid->LoopId, nodes->LoopNodeIds, type->GraphType]
Loop Ids for answer-flow graph are the corresponding unfinished call graph loop Ids
Number of loops: 0

----loop-call analysis summary: infinitely deep call loop detected----
Nodes are in the format of node[nodeid->Id,subgoal->Subgoal,module->Module,ruleid->RuleId,type->CallType]
Initial non-loop subgoals
  node[nodeid->1, subgoal->null, module->?_h39132, ruleid->?_h39150, type->nonloopcall]
  node[nodeid->2, subgoal->${path1[?_h39553 -> ?_h39559]}, module->main, ruleid->?_h39712, type->nonloopcall]
Loop subgoals
  node[nodeid->3, subgoal->${path2[?_h40190 -> f1(?_h40200)]}, module->main, ruleid->rule3, type->loopcall]
  node[nodeid->4, subgoal->${path1[?_h40900 -> f2(f1(?_h40914))]}, module->main, ruleid->rule4, type->loopcall]

