
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(7)/char(10) `%f'
                unexpected transactional symbol
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(8)/char(12) `g'
                invalid arguments in function definition: only variables are alowed
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(11)/char(15) `@'
                invalid function definition
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(12)/char(15) `@'
                invalid function definition
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(13)/char(15) `:-'
                invalid function definition
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(14)/char(15) `|'
                invalid function definition
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(15)/char(20) `=>'
                invalid function definition
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(16)/char(20) `:-'
                invalid function definition
++Error[FLORA]> [test_func_errors.flr] <Parser> near line(17)/char(21) `:-'
                invalid function definition

++9 errors

++compilation aborted

++Error[FLORA]> [test_func_warnings.flr] <Parser> near line(4)/char(15) `:='
                invalid function definition
++Error[FLORA]> [test_func_warnings.flr] <Parser> near line(5)/char(14) `:='
                invalid function definition

++2 errors

++compilation aborted

++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(1)/char(21) `z'
                  singleton variable
++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(1)/char(21) `z'
                  unsafe variable in function definition
++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(2)/char(7) `y'
                  singleton variable
++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(2)/char(7) `y'
                  unsafe variable in rule head: does not occur in rule body
++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(3)/char(4) `x'
                  singleton variable
++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(3)/char(7) `y'
                  singleton variable
++Warning[FLORA]> [test_func_warnings.flr] <Compiler> near line(6)/char(1) `f'
                  predicate symbol was previously used as user defined function

++7 warnings

