#include "standard.h"
?- set_test_mode@_plg(flrdelaysupport).

m1(?X,?Y,?Z) :- must(ground(?X),ground(?Y),nonvar(?Z))^wish(ground(?W))^foo(?X,?Y,?Z,?W).
m2(?X,?Y,?Z,?W) :- must(ground(?X),ground(?Y),ground(?Z))^foo(?X,?Y,?Z,?W).
m3(?X,?Y,?Z,?W) :- must(ground(?X),ground(?Y))^wish(ground(?Z),ground(?W))^foo(?X,?Y,?Z,?W).

foo(a,b,c,d).


%test1 :- m1(a,b,c).
%test2 :- m1(a,b(?x),?x).
%test3(?x) :- m2(a,b,c,?x).
%test4 :- (m3(?x,?y,c,d);true).
%test5 :- (m3(a,?x,?y,?z);true).
%test6(?x,?y) :- m3(a,b,?x,?y).

%pretest :-
	%test1, %test2, %test3(?x),
	writeln(test3=?x)@_plg,
	%test4, %test5, %test6(?y,?z),
	flora_decode_oid_as_atom_substitute_vars(?y+?z,?Atm)@_plg(flrdecode),
	writeln(test6=?Atm)@_plg.
%test :-
	set_test_mode@_plg(flrdelaysupport),
	file_reopen(temp1,w,STDERR,?_)@_plg(file_io),
	file_reopen(temp2,w,STDWARN,?_)@_plg(file_io),
	tell(temp)@_plg,
	%pretest,
	told@_plg,
	file_close(STDWARN)@_plg(file_io),
	file_close(STDERR)@_plg(file_io),
	open(file(temp)@_plg,append,?Port)@_plg,
	open(file(temp1)@_plg,read,?Port1)@_plg,
	open(file(temp2)@_plg,read,?Port2)@_plg,
	copyIOport(?Port1,?Port)@_plg(file_io),
	copyIOport(?Port2,?Port)@_plg(file_io),
	close(?Port)@_plg,
	close(?Port1)@_plg,
	close(?Port2)@_plg,
	flora_file_op(unlink,temp1)@_plg(flrporting),
	flora_file_op(unlink,temp2)@_plg(flrporting).
